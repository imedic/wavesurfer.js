{"version":3,"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement-webaudio.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/ajax.js","webpack://WaveSurfer/./src/util/extend.js","webpack://WaveSurfer/./src/util/fetch.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js"],"names":["CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","constructor","name","toLowerCase","canvasContextAttributes","element","getContext","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","x","y","radius","fillRectToContext","ctx","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","peaks","absmax","halfH","offsetY","drawLineToContext","length","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","i","peak","h","halfPixel","j","format","quality","type","Promise","resolve","toBlob","toDataURL","Drawer","container","params","pixelRatio","lastPos","wrapper","el","styles","util","style","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","rtl","right","left","scrollLeft","scrollWidth","addEventListener","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","autoCenterRate","max","min","updateSize","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","removeChild","channelIndex","Observer","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","forEach","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","prepareDraw","hasMinVals","undefined","peakIndexScale","bar","gap","barGap","step","floor","barMinHeight","reflectedPeaks","len","drawLine","setFillStyles","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","fn","frame","Array","channels","splitChannels","setHeight","channelPeaks","barHeight","normalize","some","call","val","all","map","getImage","images","MediaElementWebAudio","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","media","createMediaElementSource","mediaElement","ac","connect","analyser","MediaElement","currentTime","duration","paused","playbackRate","play","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","error","canplay","ended","seeked","event","volumechange","muted","Object","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","url","preload","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","HTMLMediaElement","Error","load","_setupMediaListeners","setVolume","explicitDuration","Infinity","seekable","getDuration","value","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","reject","destroyed","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","filter","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","ajax","options","instance","xhr","XMLHttpRequest","fired100","open","method","responseType","requestHeaders","header","setRequestHeader","key","withCredentials","lengthComputable","loaded","total","status","response","send","extend","dest","console","warn","sources","source","ProgressHandler","contentLength","_reader","body","getReader","parseInt","controller","read","then","done","onProgress","close","byteLength","enqueue","catch","fetchFile","fetchHeaders","Headers","fetchRequest","Request","AbortController","append","fetchOptions","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","documentMode","test","navigator","userAgent","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","func","args","getId","prefix","random","toString","substring","values","largest","smallest","Number","handlers","callback","splice","handler","apply","setTimeout","preventClickHandler","stopPropagation","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","bind","prop","PluginClass","ws","WaveSurfer","wavesurfer","init","defaultParams","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","backends","assign","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","prototype","supportsWebAudio","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","drawBuffer","getPlayedPercents","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","isFinite","oldScrollParent","getPlaybackRate","setMute","mute","filters","color","background","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","data","loadDecodedBuffer","reader","FileReader","loadArrayBuffer","result","readAsArrayBuffer","empty","preloadIgnoreReasons","indexOf","activeReasons","reason","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","request","percentComplete","accuracy","noWindow","JSON","stringify","encodeURIComponent","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","VERSION","__VERSION__","PLAYING","PAUSED","FINISHED","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","create","gainNode","mergedPeaks","offlineAc","scriptNode","splitPeaks","state","setState","setLength","disconnect","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","c","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","adjustedTime","resume"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;ACjEA;;AACA;;;;;;;;;;AAEA;;;;;;;IAOqBA,W;AACjB,yBAAc;AAAA;;AACV;;;;;AAKA,SAAKC,IAAL,GAAY,IAAZ;AACA;;;;;;AAKA,SAAKC,OAAL,GAAe,IAAf;AACA;;;;;;AAKA,SAAKC,QAAL,GAAgB,IAAhB;AACA;;;;;;AAKA,SAAKC,WAAL,GAAmB,IAAnB;AACA;;;;;;;AAMA,SAAKC,KAAL,GAAa,CAAb;AACA;;;;;;;AAMA,SAAKC,GAAL,GAAW,CA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","file":"wavesurfer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/wavesurfer.js\");\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","/**\r\n * @since 3.0.0\r\n */\r\n\r\nimport style from './util/style';\r\nimport getId from './util/get-id';\r\n\r\n/**\r\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\r\n * and an (optional) progress wave `canvas`.\r\n *\r\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\r\n * render a waveform, depending on the zoom level.\r\n */\r\nexport default class CanvasEntry {\r\n    constructor() {\r\n        /**\r\n         * The wave node\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        this.wave = null;\r\n        /**\r\n         * The wave canvas rendering context\r\n         *\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this.waveCtx = null;\r\n        /**\r\n         * The (optional) progress wave node\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        this.progress = null;\r\n        /**\r\n         * The (optional) progress wave canvas rendering context\r\n         *\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this.progressCtx = null;\r\n        /**\r\n         * Start of the area the canvas should render, between 0 and 1\r\n         *\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this.start = 0;\r\n        /**\r\n         * End of the area the canvas should render, between 0 and 1\r\n         *\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this.end = 1;\r\n        /**\r\n         * Unique identifier for this entry\r\n         *\r\n         * @type {string}\r\n         */\r\n        this.id = getId(this.constructor.name.toLowerCase() + '_');\r\n        /**\r\n         * Canvas 2d context attributes\r\n         *\r\n         * @type {object}\r\n         */\r\n        this.canvasContextAttributes = {};\r\n    }\r\n\r\n    /**\r\n     * Store the wave canvas element and create the 2D rendering context\r\n     *\r\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\r\n     */\r\n    initWave(element) {\r\n        this.wave = element;\r\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\r\n    }\r\n\r\n    /**\r\n     * Store the progress wave canvas element and create the 2D rendering\r\n     * context\r\n     *\r\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\r\n     */\r\n    initProgress(element) {\r\n        this.progress = element;\r\n        this.progressCtx = this.progress.getContext(\r\n            '2d',\r\n            this.canvasContextAttributes\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions\r\n     *\r\n     * @param {number} elementWidth Width of the entry\r\n     * @param {number} totalWidth Total width of the multi canvas renderer\r\n     * @param {number} width The new width of the element\r\n     * @param {number} height The new height of the element\r\n     */\r\n    updateDimensions(elementWidth, totalWidth, width, height) {\r\n        // where the canvas starts and ends in the waveform, represented as a\r\n        // decimal between 0 and 1\r\n        this.start = this.wave.offsetLeft / totalWidth || 0;\r\n        this.end = this.start + elementWidth / totalWidth;\r\n\r\n        // set wave canvas dimensions\r\n        this.wave.width = width;\r\n        this.wave.height = height;\r\n        let elementSize = { width: elementWidth + 'px' };\r\n        style(this.wave, elementSize);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            // set progress canvas dimensions\r\n            this.progress.width = width;\r\n            this.progress.height = height;\r\n            style(this.progress, elementSize);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear the wave and progress rendering contexts\r\n     */\r\n    clearWave() {\r\n        // wave\r\n        this.waveCtx.clearRect(\r\n            0,\r\n            0,\r\n            this.waveCtx.canvas.width,\r\n            this.waveCtx.canvas.height\r\n        );\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            this.progressCtx.clearRect(\r\n                0,\r\n                0,\r\n                this.progressCtx.canvas.width,\r\n                this.progressCtx.canvas.height\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the fill styles for wave and progress\r\n     *\r\n     * @param {string} waveColor Fill color for the wave canvas\r\n     * @param {?string} progressColor Fill color for the progress canvas\r\n     */\r\n    setFillStyles(waveColor, progressColor) {\r\n        this.waveCtx.fillStyle = waveColor;\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.progressCtx.fillStyle = progressColor;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle for wave and progress\r\n     *\r\n     * @param {number} x X start position\r\n     * @param {number} y Y start position\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRects(x, y, width, height, radius) {\r\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.fillRectToContext(\r\n                this.progressCtx,\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                radius\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw the actual rectangle on a `canvas` element\r\n     *\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {number} x X start position\r\n     * @param {number} y Y start position\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRectToContext(ctx, x, y, width, height, radius) {\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n\r\n        if (radius) {\r\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\r\n        } else {\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw a rounded rectangle on Canvas\r\n     *\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Canvas context\r\n     * @param {number} x X-position of the rectangle\r\n     * @param {number} y Y-position of the rectangle\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     *\r\n     * @return {void}\r\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\r\n     */\r\n    drawRoundedRect(ctx, x, y, width, height, radius) {\r\n        if (height === 0) {\r\n            return;\r\n        }\r\n        // peaks are float values from -1 to 1. Use absolute height values in\r\n        // order to correctly calculate rounded rectangle coordinates\r\n        if (height < 0) {\r\n            height *= -1;\r\n            y -= height;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(\r\n            x + width,\r\n            y + height,\r\n            x + width - radius,\r\n            y + height\r\n        );\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Render the actual wave and progress lines\r\n     *\r\n     * @param {number[]} peaks Array with peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     */\r\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\r\n        this.drawLineToContext(\r\n            this.waveCtx,\r\n            peaks,\r\n            absmax,\r\n            halfH,\r\n            offsetY,\r\n            start,\r\n            end\r\n        );\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.drawLineToContext(\r\n                this.progressCtx,\r\n                peaks,\r\n                absmax,\r\n                halfH,\r\n                offsetY,\r\n                start,\r\n                end\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the actual waveform line on a `canvas` element\r\n     *\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {number[]} peaks Array with peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     */\r\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n\r\n        const length = peaks.length / 2;\r\n        const first = Math.round(length * this.start);\r\n\r\n        // use one more peak value to make sure we join peaks at ends -- unless,\r\n        // of course, this is the last canvas\r\n        const last = Math.round(length * this.end) + 1;\r\n\r\n        const canvasStart = first;\r\n        const canvasEnd = last;\r\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\r\n\r\n        // optimization\r\n        const halfOffset = halfH + offsetY;\r\n        const absmaxHalf = absmax / halfH;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\r\n\r\n        ctx.lineTo(\r\n            (canvasStart - first) * scale,\r\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\r\n        );\r\n\r\n        let i, peak, h;\r\n        for (i = canvasStart; i < canvasEnd; i++) {\r\n            peak = peaks[2 * i] || 0;\r\n            h = Math.round(peak / absmaxHalf);\r\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\r\n        }\r\n\r\n        // draw the bottom edge going backwards, to make a single\r\n        // closed hull to fill\r\n        let j = canvasEnd - 1;\r\n        for (j; j >= canvasStart; j--) {\r\n            peak = peaks[2 * j + 1] || 0;\r\n            h = Math.round(peak / absmaxHalf);\r\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\r\n        }\r\n\r\n        ctx.lineTo(\r\n            (canvasStart - first) * scale,\r\n            halfOffset -\r\n                Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\r\n        );\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Destroys this entry\r\n     */\r\n    destroy() {\r\n        this.waveCtx = null;\r\n        this.wave = null;\r\n\r\n        this.progressCtx = null;\r\n        this.progress = null;\r\n    }\r\n\r\n    /**\r\n     * Return image data of the wave `canvas` element\r\n     *\r\n     * When using a `type` of `'blob'`, this will return a `Promise` that\r\n     * resolves with a `Blob` instance.\r\n     *\r\n     * @param {string} format='image/png' An optional value of a format type.\r\n     * @param {number} quality=0.92 An optional value between 0 and 1.\r\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\r\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\r\n     * returns a data URL. When using the `'blob'` `type` this returns a\r\n     * `Promise` that resolves with a `Blob` instance.\r\n     */\r\n    getImage(format, quality, type) {\r\n        if (type === 'blob') {\r\n            return new Promise(resolve => {\r\n                this.wave.toBlob(resolve, format, quality);\r\n            });\r\n        } else if (type === 'dataURL') {\r\n            return this.wave.toDataURL(format, quality);\r\n        }\r\n    }\r\n}\r\n","import * as util from './util';\r\n\r\n/**\r\n * Parent class for renderers\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class Drawer extends util.Observer {\r\n    /**\r\n     * @param {HTMLElement} container The container node of the wavesurfer instance\r\n     * @param {WavesurferParams} params The wavesurfer initialisation options\r\n     */\r\n    constructor(container, params) {\r\n        super();\r\n        /** @private */\r\n        this.container = container;\r\n        /**\r\n         * @type {WavesurferParams}\r\n         * @private\r\n         */\r\n        this.params = params;\r\n        /**\r\n         * The width of the renderer\r\n         * @type {number}\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * The height of the renderer\r\n         * @type {number}\r\n         */\r\n        this.height = params.height * this.params.pixelRatio;\r\n        /** @private */\r\n        this.lastPos = 0;\r\n        /**\r\n         * The `<wave>` element which is added to the container\r\n         * @type {HTMLElement}\r\n         */\r\n        this.wrapper = null;\r\n    }\r\n\r\n    /**\r\n     * Alias of `util.style`\r\n     *\r\n     * @param {HTMLElement} el The element that the styles will be applied to\r\n     * @param {Object} styles The map of propName: attribute, both are used as-is\r\n     * @return {HTMLElement} el\r\n     */\r\n    style(el, styles) {\r\n        return util.style(el, styles);\r\n    }\r\n\r\n    /**\r\n     * Create the wrapper `<wave>` element, style it and set up the events for\r\n     * interaction\r\n     */\r\n    createWrapper() {\r\n        this.wrapper = this.container.appendChild(\r\n            document.createElement('wave')\r\n        );\r\n\r\n        this.style(this.wrapper, {\r\n            display: 'block',\r\n            position: 'relative',\r\n            userSelect: 'none',\r\n            webkitUserSelect: 'none',\r\n            height: this.params.height + 'px'\r\n        });\r\n\r\n        if (this.params.fillParent || this.params.scrollParent) {\r\n            this.style(this.wrapper, {\r\n                width: '100%',\r\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\r\n                overflowY: 'hidden'\r\n            });\r\n        }\r\n\r\n        this.setupWrapperEvents();\r\n    }\r\n\r\n    /**\r\n     * Handle click event\r\n     *\r\n     * @param {Event} e Click event\r\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\r\n     * @return {number} Playback position from 0 to 1\r\n     */\r\n    handleEvent(e, noPrevent) {\r\n        !noPrevent && e.preventDefault();\r\n\r\n        const clientX = e.targetTouches\r\n            ? e.targetTouches[0].clientX\r\n            : e.clientX;\r\n        const bbox = this.wrapper.getBoundingClientRect();\r\n\r\n        const nominalWidth = this.width;\r\n        const parentWidth = this.getWidth();\r\n\r\n        let progress;\r\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\r\n            progress =\r\n                (this.params.rtl ? bbox.right - clientX : clientX - bbox.left) *\r\n                    (this.params.pixelRatio / nominalWidth) || 0;\r\n\r\n            if (progress > 1) {\r\n                progress = 1;\r\n            }\r\n        } else {\r\n            progress =\r\n                ((this.params.rtl\r\n                    ? bbox.right - clientX\r\n                    : clientX - bbox.left) +\r\n                    this.wrapper.scrollLeft) /\r\n                    this.wrapper.scrollWidth || 0;\r\n        }\r\n\r\n        return progress;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    setupWrapperEvents() {\r\n        this.wrapper.addEventListener('click', e => {\r\n            const scrollbarHeight =\r\n                this.wrapper.offsetHeight - this.wrapper.clientHeight;\r\n            if (scrollbarHeight !== 0) {\r\n                // scrollbar is visible.  Check if click was on it\r\n                const bbox = this.wrapper.getBoundingClientRect();\r\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\r\n                    // ignore mousedown as it was on the scrollbar\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.params.interact) {\r\n                this.fireEvent('click', e, this.handleEvent(e));\r\n            }\r\n        });\r\n\r\n        this.wrapper.addEventListener('dblclick', e => {\r\n            if (this.params.interact) {\r\n                this.fireEvent('dblclick', e, this.handleEvent(e));\r\n            }\r\n        });\r\n\r\n        this.wrapper.addEventListener('scroll', e =>\r\n            this.fireEvent('scroll', e)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draw peaks on the canvas\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} length The width of the area that should be drawn\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawPeaks(peaks, length, start, end) {\r\n        if (!this.setWidth(length)) {\r\n            this.clearWave();\r\n        }\r\n\r\n        this.params.barWidth\r\n            ? this.drawBars(peaks, 0, start, end)\r\n            : this.drawWave(peaks, 0, start, end);\r\n    }\r\n\r\n    /**\r\n     * Scroll to the beginning\r\n     */\r\n    resetScroll() {\r\n        if (this.wrapper !== null) {\r\n            this.wrapper.scrollLeft = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recenter the view-port at a certain percent of the waveform\r\n     *\r\n     * @param {number} percent Value from 0 to 1 on the waveform\r\n     */\r\n    recenter(percent) {\r\n        const position = this.wrapper.scrollWidth * percent;\r\n        this.recenterOnPosition(position, true);\r\n    }\r\n\r\n    /**\r\n     * Recenter the view-port on a position, either scroll there immediately or\r\n     * in steps of 5 pixels\r\n     *\r\n     * @param {number} position X-offset in pixels\r\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\r\n     */\r\n    recenterOnPosition(position, immediate) {\r\n        const scrollLeft = this.wrapper.scrollLeft;\r\n        const half = ~~(this.wrapper.clientWidth / 2);\r\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\r\n        let target = position - half;\r\n        let offset = target - scrollLeft;\r\n\r\n        if (maxScroll == 0) {\r\n            // no need to continue if scrollbar is not there\r\n            return;\r\n        }\r\n\r\n        // if the cursor is currently visible...\r\n        if (!immediate && -half <= offset && offset < half) {\r\n            // set rate at which waveform is centered\r\n            let rate = this.params.autoCenterRate;\r\n\r\n            // make rate depend on width of view and length of waveform\r\n            rate /= half;\r\n            rate *= maxScroll;\r\n\r\n            offset = Math.max(-rate, Math.min(rate, offset));\r\n            target = scrollLeft + offset;\r\n        }\r\n\r\n        // limit target to valid range (0 to maxScroll)\r\n        target = Math.max(0, Math.min(maxScroll, target));\r\n        // no use attempting to scroll if we're not moving\r\n        if (target != scrollLeft) {\r\n            this.wrapper.scrollLeft = target;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current scroll position in pixels\r\n     *\r\n     * @return {number} Horizontal scroll position in pixels\r\n     */\r\n    getScrollX() {\r\n        let x = 0;\r\n        if (this.wrapper) {\r\n            const pixelRatio = this.params.pixelRatio;\r\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\r\n\r\n            // In cases of elastic scroll (safari with mouse wheel) you can\r\n            // scroll beyond the limits of the container\r\n            // Calculate and floor the scrollable extent to make sure an out\r\n            // of bounds value is not returned\r\n            // Ticket #1312\r\n            if (this.params.scrollParent) {\r\n                const maxScroll = ~~(\r\n                    this.wrapper.scrollWidth * pixelRatio -\r\n                    this.getWidth()\r\n                );\r\n                x = Math.min(maxScroll, Math.max(0, x));\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * Get the width of the container\r\n     *\r\n     * @return {number} The width of the container\r\n     */\r\n    getWidth() {\r\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\r\n    }\r\n\r\n    /**\r\n     * Set the width of the container\r\n     *\r\n     * @param {number} width The new width of the container\r\n     * @return {boolean} Whether the width of the container was updated or not\r\n     */\r\n    setWidth(width) {\r\n        if (this.width == width) {\r\n            return false;\r\n        }\r\n\r\n        this.width = width;\r\n\r\n        if (this.params.fillParent || this.params.scrollParent) {\r\n            this.style(this.wrapper, {\r\n                width: ''\r\n            });\r\n        } else {\r\n            this.style(this.wrapper, {\r\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\r\n            });\r\n        }\r\n\r\n        this.updateSize();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Set the height of the container\r\n     *\r\n     * @param {number} height The new height of the container.\r\n     * @return {boolean} Whether the height of the container was updated or not\r\n     */\r\n    setHeight(height) {\r\n        if (height == this.height) {\r\n            return false;\r\n        }\r\n        this.height = height;\r\n\r\n        this.style(this.wrapper, {\r\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\r\n        });\r\n\r\n        this.updateSize();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called by wavesurfer when progress should be rendered\r\n     *\r\n     * @param {number} progress From 0 to 1\r\n     */\r\n    progress(progress) {\r\n        const minPxDelta = 1 / this.params.pixelRatio;\r\n        const pos = Math.round(progress * this.width) * minPxDelta;\r\n\r\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\r\n            this.lastPos = pos;\r\n\r\n            if (this.params.scrollParent && this.params.autoCenter) {\r\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\r\n                this.recenterOnPosition(\r\n                    newPos,\r\n                    this.params.autoCenterImmediately\r\n                );\r\n            }\r\n\r\n            this.updateProgress(pos);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     */\r\n    destroy() {\r\n        this.unAll();\r\n        if (this.wrapper) {\r\n            if (this.wrapper.parentNode == this.container) {\r\n                this.container.removeChild(this.wrapper);\r\n            }\r\n            this.wrapper = null;\r\n        }\r\n    }\r\n\r\n    /* Renderer-specific methods */\r\n\r\n    /**\r\n     * Called after cursor related params have changed.\r\n     *\r\n     * @abstract\r\n     */\r\n    updateCursor() {}\r\n\r\n    /**\r\n     * Called when the size of the container changes so the renderer can adjust\r\n     *\r\n     * @abstract\r\n     */\r\n    updateSize() {}\r\n\r\n    /**\r\n     * Draw a waveform with bars\r\n     *\r\n     * @abstract\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\r\n     * rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawBars(peaks, channelIndex, start, end) {}\r\n\r\n    /**\r\n     * Draw a waveform\r\n     *\r\n     * @abstract\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\r\n     * rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawWave(peaks, channelIndex, start, end) {}\r\n\r\n    /**\r\n     * Clear the waveform\r\n     *\r\n     * @abstract\r\n     */\r\n    clearWave() {}\r\n\r\n    /**\r\n     * Render the new progress\r\n     *\r\n     * @abstract\r\n     * @param {number} position X-Offset of progress position in pixels\r\n     */\r\n    updateProgress(position) {}\r\n}\r\n","import Drawer from './drawer';\r\nimport * as util from './util';\r\nimport CanvasEntry from './drawer.canvasentry';\r\n\r\n/**\r\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\r\n * builtin renderer.\r\n *\r\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\r\n * on the zoom level.\r\n */\r\nexport default class MultiCanvas extends Drawer {\r\n    /**\r\n     * @param {HTMLElement} container The container node of the wavesurfer instance\r\n     * @param {WavesurferParams} params The wavesurfer initialisation options\r\n     */\r\n    constructor(container, params) {\r\n        super(container, params);\r\n\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this.maxCanvasWidth = params.maxCanvasWidth;\r\n\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.maxCanvasElementWidth = Math.round(\r\n            params.maxCanvasWidth / params.pixelRatio\r\n        );\r\n\r\n        /**\r\n         * Whether or not the progress wave is rendered. If the `waveColor`\r\n         * and `progressColor` are the same color it is not.\r\n         *\r\n         * @type {boolean}\r\n         */\r\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\r\n\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.halfPixel = 0.5 / params.pixelRatio;\r\n\r\n        /**\r\n         * List of `CanvasEntry` instances.\r\n         *\r\n         * @private\r\n         * @type {Array}\r\n         */\r\n        this.canvases = [];\r\n\r\n        /**\r\n         * @private\r\n         * @type {HTMLElement}\r\n         */\r\n        this.progressWave = null;\r\n\r\n        /**\r\n         * Class used to generate entries.\r\n         *\r\n         * @private\r\n         * @type {function}\r\n         */\r\n        this.EntryClass = CanvasEntry;\r\n\r\n        /**\r\n         * Canvas 2d context attributes.\r\n         *\r\n         * @private\r\n         * @type {object}\r\n         */\r\n        this.canvasContextAttributes = params.drawingContextAttributes;\r\n\r\n        /**\r\n         * Overlap added between entries to prevent vertical white stripes\r\n         * between `canvas` elements.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\r\n\r\n        /**\r\n         * The radius of the wave bars. Makes bars rounded\r\n         *\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.barRadius = params.barRadius || 0;\r\n    }\r\n\r\n    /**\r\n     * Initialize the drawer\r\n     */\r\n    init() {\r\n        this.createWrapper();\r\n        this.createElements();\r\n    }\r\n\r\n    /**\r\n     * Create the canvas elements and style them\r\n     *\r\n     * @private\r\n     */\r\n    createElements() {\r\n        this.progressWave = this.wrapper.appendChild(\r\n            this.style(document.createElement('wave'), {\r\n                position: 'absolute',\r\n                zIndex: 3,\r\n                left: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n                overflow: 'hidden',\r\n                width: '0',\r\n                display: 'none',\r\n                boxSizing: 'border-box',\r\n                borderRightStyle: 'solid',\r\n                pointerEvents: 'none'\r\n            })\r\n        );\r\n\r\n        this.addCanvas();\r\n        this.updateCursor();\r\n    }\r\n\r\n    /**\r\n     * Update cursor style\r\n     */\r\n    updateCursor() {\r\n        this.style(this.progressWave, {\r\n            borderRightWidth: this.params.cursorWidth + 'px',\r\n            borderRightColor: this.params.cursorColor\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adjust to the updated size by adding or removing canvases\r\n     */\r\n    updateSize() {\r\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n        const requiredCanvases = Math.ceil(\r\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\r\n        );\r\n\r\n        // add required canvases\r\n        while (this.canvases.length < requiredCanvases) {\r\n            this.addCanvas();\r\n        }\r\n\r\n        // remove older existing canvases, if any\r\n        while (this.canvases.length > requiredCanvases) {\r\n            this.removeCanvas();\r\n        }\r\n\r\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\r\n        const lastCanvas = this.canvases.length - 1;\r\n        this.canvases.forEach((entry, i) => {\r\n            if (i == lastCanvas) {\r\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\r\n            }\r\n            this.updateDimensions(entry, canvasWidth, this.height);\r\n\r\n            entry.clearWave();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add a canvas to the canvas list\r\n     *\r\n     * @private\r\n     */\r\n    addCanvas() {\r\n        const entry = new this.EntryClass();\r\n        entry.canvasContextAttributes = this.canvasContextAttributes;\r\n        entry.hasProgressCanvas = this.hasProgressCanvas;\r\n        entry.halfPixel = this.halfPixel;\r\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\r\n\r\n        // wave\r\n        entry.initWave(\r\n            this.wrapper.appendChild(\r\n                this.style(document.createElement('canvas'), {\r\n                    position: 'absolute',\r\n                    zIndex: 2,\r\n                    left: leftOffset + 'px',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    height: '100%',\r\n                    pointerEvents: 'none'\r\n                })\r\n            )\r\n        );\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            entry.initProgress(\r\n                this.progressWave.appendChild(\r\n                    this.style(document.createElement('canvas'), {\r\n                        position: 'absolute',\r\n                        left: leftOffset + 'px',\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        height: '100%'\r\n                    })\r\n                )\r\n            );\r\n        }\r\n\r\n        this.canvases.push(entry);\r\n    }\r\n\r\n    /**\r\n     * Pop single canvas from the list\r\n     *\r\n     * @private\r\n     */\r\n    removeCanvas() {\r\n        let lastEntry = this.canvases[this.canvases.length - 1];\r\n\r\n        // wave\r\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\r\n        }\r\n\r\n        // cleanup\r\n        if (lastEntry) {\r\n            lastEntry.destroy();\r\n            lastEntry = null;\r\n        }\r\n\r\n        this.canvases.pop();\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions of a canvas element\r\n     *\r\n     * @private\r\n     * @param {CanvasEntry} entry Target entry\r\n     * @param {number} width The new width of the element\r\n     * @param {number} height The new height of the element\r\n     */\r\n    updateDimensions(entry, width, height) {\r\n        const elementWidth = Math.round(width / this.params.pixelRatio);\r\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n\r\n        // update canvas dimensions\r\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\r\n\r\n        // style element\r\n        this.style(this.progressWave, { display: 'block' });\r\n    }\r\n\r\n    /**\r\n     * Clear the whole multi-canvas\r\n     */\r\n    clearWave() {\r\n        this.canvases.forEach(entry => entry.clearWave());\r\n    }\r\n\r\n    /**\r\n     * Draw a waveform with bars\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0. Must be an integer.\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @returns {void}\r\n     */\r\n    drawBars(peaks, channelIndex, start, end) {\r\n        return this.prepareDraw(\r\n            peaks,\r\n            channelIndex,\r\n            start,\r\n            end,\r\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\r\n                // if drawBars was called within ws.empty we don't pass a start and\r\n                // don't want anything to happen\r\n                if (start === undefined) {\r\n                    return;\r\n                }\r\n                // Skip every other value if there are negatives.\r\n                const peakIndexScale = hasMinVals ? 2 : 1;\r\n                const length = peaks.length / peakIndexScale;\r\n                const bar = this.params.barWidth * this.params.pixelRatio;\r\n                const gap =\r\n                    this.params.barGap === null\r\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\r\n                        : Math.max(\r\n                              this.params.pixelRatio,\r\n                              this.params.barGap * this.params.pixelRatio\r\n                          );\r\n                const step = bar + gap;\r\n\r\n                const scale = length / this.width;\r\n                const first = start;\r\n                const last = end;\r\n                let i = first;\r\n\r\n                for (i; i < last; i += step) {\r\n                    const peak =\r\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\r\n                    let h = Math.round((peak / absmax) * halfH);\r\n\r\n                    /* in case of silences, allow the user to specify that we\r\n                     * always draw *something* (normally a 1px high bar) */\r\n                    if (h == 0 && this.params.barMinHeight)\r\n                        h = this.params.barMinHeight;\r\n\r\n                    this.fillRect(\r\n                        i + this.halfPixel,\r\n                        halfH - h + offsetY,\r\n                        bar + this.halfPixel,\r\n                        h * 2,\r\n                        this.barRadius\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draw a waveform\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number?} start The x-offset of the beginning of the area that\r\n     * should be rendered (If this isn't set only a flat line is rendered)\r\n     * @param {number?} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @returns {void}\r\n     */\r\n    drawWave(peaks, channelIndex, start, end) {\r\n        return this.prepareDraw(\r\n            peaks,\r\n            channelIndex,\r\n            start,\r\n            end,\r\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\r\n                if (!hasMinVals) {\r\n                    const reflectedPeaks = [];\r\n                    const len = peaks.length;\r\n                    let i = 0;\r\n                    for (i; i < len; i++) {\r\n                        reflectedPeaks[2 * i] = peaks[i];\r\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\r\n                    }\r\n                    peaks = reflectedPeaks;\r\n                }\r\n\r\n                // if drawWave was called within ws.empty we don't pass a start and\r\n                // end and simply want a flat line\r\n                if (start !== undefined) {\r\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end);\r\n                }\r\n\r\n                // always draw a median line\r\n                this.fillRect(\r\n                    0,\r\n                    halfH + offsetY - this.halfPixel,\r\n                    this.width,\r\n                    this.halfPixel,\r\n                    this.barRadius\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Tell the canvas entries to render their portion of the waveform\r\n     *\r\n     * @private\r\n     * @param {number[]} peaks Peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     */\r\n    drawLine(peaks, absmax, halfH, offsetY, start, end) {\r\n        this.canvases.forEach(entry => {\r\n            this.setFillStyles(entry);\r\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle on the multi-canvas\r\n     *\r\n     * @param {number} x X-position of the rectangle\r\n     * @param {number} y Y-position of the rectangle\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRect(x, y, width, height, radius) {\r\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\r\n        const endCanvas = Math.min(\r\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\r\n            this.canvases.length\r\n        );\r\n        let i = startCanvas;\r\n        for (i; i < endCanvas; i++) {\r\n            const entry = this.canvases[i];\r\n            const leftOffset = i * this.maxCanvasWidth;\r\n\r\n            const intersection = {\r\n                x1: Math.max(x, i * this.maxCanvasWidth),\r\n                y1: y,\r\n                x2: Math.min(\r\n                    x + width,\r\n                    i * this.maxCanvasWidth + entry.wave.width\r\n                ),\r\n                y2: y + height\r\n            };\r\n\r\n            if (intersection.x1 < intersection.x2) {\r\n                this.setFillStyles(entry);\r\n\r\n                entry.fillRects(\r\n                    intersection.x1 - leftOffset,\r\n                    intersection.y1,\r\n                    intersection.x2 - intersection.x1,\r\n                    intersection.y2 - intersection.y1,\r\n                    radius\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs preparation tasks and calculations which are shared by `drawBars`\r\n     * and `drawWave`\r\n     *\r\n     * @private\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\r\n     * split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number?} start The x-offset of the beginning of the area that\r\n     * should be rendered. If this isn't set only a flat line is rendered\r\n     * @param {number?} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @param {function} fn The render function to call, e.g. `drawWave`\r\n     * @returns {void}\r\n     */\r\n    prepareDraw(peaks, channelIndex, start, end, fn) {\r\n        return util.frame(() => {\r\n            // Split channels and call this function with the channelIndex set\r\n            if (peaks[0] instanceof Array) {\r\n                const channels = peaks;\r\n                if (this.params.splitChannels) {\r\n                    this.setHeight(\r\n                        channels.length *\r\n                            this.params.height *\r\n                            this.params.pixelRatio\r\n                    );\r\n                    return channels.forEach((channelPeaks, i) =>\r\n                        this.prepareDraw(channelPeaks, i, start, end, fn)\r\n                    );\r\n                }\r\n                peaks = channels[0];\r\n            }\r\n            // calculate maximum modulation value, either from the barHeight\r\n            // parameter or if normalize=true from the largest value in the peak\r\n            // set\r\n            let absmax = 1 / this.params.barHeight;\r\n            if (this.params.normalize) {\r\n                const max = util.max(peaks);\r\n                const min = util.min(peaks);\r\n                absmax = -min > max ? -min : max;\r\n            }\r\n\r\n            // Bar wave draws the bottom only as a reflection of the top,\r\n            // so we don't need negative values\r\n            const hasMinVals = [].some.call(peaks, val => val < 0);\r\n            const height = this.params.height * this.params.pixelRatio;\r\n            const offsetY = height * channelIndex || 0;\r\n            const halfH = height / 2;\r\n\r\n            return fn({\r\n                absmax: absmax,\r\n                hasMinVals: hasMinVals,\r\n                height: height,\r\n                offsetY: offsetY,\r\n                halfH: halfH,\r\n                peaks: peaks\r\n            });\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Set the fill styles for a certain entry (wave and progress)\r\n     *\r\n     * @private\r\n     * @param {CanvasEntry} entry Target entry\r\n     */\r\n    setFillStyles(entry) {\r\n        entry.setFillStyles(this.params.waveColor, this.params.progressColor);\r\n    }\r\n\r\n    /**\r\n     * Return image data of the multi-canvas\r\n     *\r\n     * When using a `type` of `'blob'`, this will return a `Promise`.\r\n     *\r\n     * @param {string} format='image/png' An optional value of a format type.\r\n     * @param {number} quality=0.92 An optional value between 0 and 1.\r\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\r\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\r\n     * `type` this returns a single data URL or an array of data URLs,\r\n     * one for each canvas. When using the `'blob'` `type` this returns a\r\n     * `Promise` that resolves with an array of `Blob` instances, one for each\r\n     * canvas.\r\n     */\r\n    getImage(format, quality, type) {\r\n        if (type === 'blob') {\r\n            return Promise.all(\r\n                this.canvases.map(entry => {\r\n                    return entry.getImage(format, quality, type);\r\n                })\r\n            );\r\n        } else if (type === 'dataURL') {\r\n            let images = this.canvases.map(entry =>\r\n                entry.getImage(format, quality, type)\r\n            );\r\n            return images.length > 1 ? images : images[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the new progress\r\n     *\r\n     * @param {number} position X-offset of progress position in pixels\r\n     */\r\n    updateProgress(position) {\r\n        this.style(this.progressWave, { width: position + 'px' });\r\n    }\r\n}\r\n","import MediaElement from './mediaelement';\r\n\r\n/**\r\n * MediaElementWebAudio backend: allows to load audio as HTML5 audio tag and use it with WebAudio API.\r\n * Setting the MediaElementWebAudio backend, there is the possibility to load audio of big dimensions, using the WebAudio API features.\r\n * The audio to load is an HTML5 audio tag, so you have to use the same methods of MediaElement backend for loading and playback.\r\n * In this way, the audio resource is not loaded entirely from server, but in ranges, since you load an HTML5 audio tag.\r\n * In this way, filters and other functionalities can be performed like with WebAudio backend, but without decoding\r\n * internally audio data, that caused crashing of the browser. You have to give also peaks, so the audio data are not decoded.\r\n *\r\n * @since 3.2.0\r\n */\r\nexport default class MediaElementWebAudio extends MediaElement {\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super(params);\r\n        /** @private */\r\n        this.params = params;\r\n        /** @private */\r\n        this.sourceMediaElement = null;\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.createTimer();\r\n        this.createVolumeNode();\r\n        this.createScriptNode();\r\n        this.createAnalyserNode();\r\n    }\r\n    /**\r\n     * Private method called by both `load` (from url)\r\n     * and `loadElt` (existing media element) methods.\r\n     *\r\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @private\r\n     */\r\n    _load(media, peaks) {\r\n        super._load(media, peaks);\r\n        this.createMediaElementSource(media);\r\n    }\r\n\r\n    /**\r\n     * Create MediaElementSource node\r\n     *\r\n     * @since 3.2.0\r\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\r\n     */\r\n    createMediaElementSource(mediaElement) {\r\n        this.sourceMediaElement = this.ac.createMediaElementSource(\r\n            mediaElement\r\n        );\r\n        this.sourceMediaElement.connect(this.analyser);\r\n    }\r\n}\r\n","import WebAudio from './webaudio';\r\nimport * as util from './util';\r\n\r\n/**\r\n * MediaElement backend\r\n */\r\nexport default class MediaElement extends WebAudio {\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super(params);\r\n        /** @private */\r\n        this.params = params;\r\n\r\n        /**\r\n         * Initially a dummy media element to catch errors. Once `_load` is\r\n         * called, this will contain the actual `HTMLMediaElement`.\r\n         * @private\r\n         */\r\n        this.media = {\r\n            currentTime: 0,\r\n            duration: 0,\r\n            paused: true,\r\n            playbackRate: 1,\r\n            play() {},\r\n            pause() {},\r\n            volume: 0\r\n        };\r\n\r\n        /** @private */\r\n        this.mediaType = params.mediaType.toLowerCase();\r\n        /** @private */\r\n        this.elementPosition = params.elementPosition;\r\n        /** @private */\r\n        this.peaks = null;\r\n        /** @private */\r\n        this.playbackRate = 1;\r\n        /** @private */\r\n        this.volume = 1;\r\n        /** @private */\r\n        this.isMuted = false;\r\n        /** @private */\r\n        this.buffer = null;\r\n        /** @private */\r\n        this.onPlayEnd = null;\r\n        /** @private */\r\n        this.mediaListeners = {};\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.createTimer();\r\n    }\r\n\r\n    /**\r\n     * Attach event listeners to media element.\r\n     */\r\n    _setupMediaListeners() {\r\n        this.mediaListeners.error = () => {\r\n            this.fireEvent('error', 'Error loading media element');\r\n        };\r\n        this.mediaListeners.canplay = () => {\r\n            this.fireEvent('canplay');\r\n        };\r\n        this.mediaListeners.ended = () => {\r\n            this.fireEvent('finish');\r\n        };\r\n        // listen to and relay play, pause and seeked events to enable\r\n        // playback control from the external media element\r\n        this.mediaListeners.play = () => {\r\n            this.fireEvent('play');\r\n        };\r\n        this.mediaListeners.pause = () => {\r\n            this.fireEvent('pause');\r\n        };\r\n        this.mediaListeners.seeked = event => {\r\n            this.fireEvent('seek');\r\n        };\r\n        this.mediaListeners.volumechange = event => {\r\n            this.isMuted = this.media.muted;\r\n            if (this.isMuted) {\r\n                this.volume = 0;\r\n            } else {\r\n                this.volume = this.media.volume;\r\n            }\r\n            this.fireEvent('volume');\r\n        };\r\n\r\n        // reset event listeners\r\n        Object.keys(this.mediaListeners).forEach(id => {\r\n            this.media.removeEventListener(id, this.mediaListeners[id]);\r\n            this.media.addEventListener(id, this.mediaListeners[id]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a timer to provide a more precise `audioprocess` event.\r\n     */\r\n    createTimer() {\r\n        const onAudioProcess = () => {\r\n            if (this.isPaused()) {\r\n                return;\r\n            }\r\n            this.fireEvent('audioprocess', this.getCurrentTime());\r\n\r\n            // Call again in the next frame\r\n            util.frame(onAudioProcess)();\r\n        };\r\n\r\n        this.on('play', onAudioProcess);\r\n\r\n        // Update the progress one more time to prevent it from being stuck in\r\n        // case of lower framerates\r\n        this.on('pause', () => {\r\n            this.fireEvent('audioprocess', this.getCurrentTime());\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create media element with url as its source,\r\n     * and append to container element.\r\n     *\r\n     * @param {string} url Path to media file\r\n     * @param {HTMLElement} container HTML element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @throws Will throw an error if the `url` argument is not a valid media\r\n     * element.\r\n     */\r\n    load(url, container, peaks, preload) {\r\n        const media = document.createElement(this.mediaType);\r\n        media.controls = this.params.mediaControls;\r\n        media.autoplay = this.params.autoplay || false;\r\n        media.preload = preload == null ? 'auto' : preload;\r\n        media.src = url;\r\n        media.style.width = '100%';\r\n\r\n        const prevMedia = container.querySelector(this.mediaType);\r\n        if (prevMedia) {\r\n            container.removeChild(prevMedia);\r\n        }\r\n        container.appendChild(media);\r\n\r\n        this._load(media, peaks);\r\n    }\r\n\r\n    /**\r\n     * Load existing media element.\r\n     *\r\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     */\r\n    loadElt(elt, peaks) {\r\n        elt.controls = this.params.mediaControls;\r\n        elt.autoplay = this.params.autoplay || false;\r\n\r\n        this._load(elt, peaks);\r\n    }\r\n\r\n    /**\r\n     * Method called by both `load` (from url)\r\n     * and `loadElt` (existing media element) methods.\r\n     *\r\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @throws Will throw an error if the `media` argument is not a valid media\r\n     * element.\r\n     * @private\r\n     */\r\n    _load(media, peaks) {\r\n        // verify media element is valid\r\n        if (\r\n            !(media instanceof HTMLMediaElement) ||\r\n            typeof media.addEventListener === 'undefined'\r\n        ) {\r\n            throw new Error('media parameter is not a valid media element');\r\n        }\r\n\r\n        // load must be called manually on iOS, otherwise peaks won't draw\r\n        // until a user interaction triggers load --> 'ready' event\r\n        if (typeof media.load == 'function') {\r\n            // Resets the media element and restarts the media resource. Any\r\n            // pending events are discarded. How much media data is fetched is\r\n            // still affected by the preload attribute.\r\n            media.load();\r\n        }\r\n\r\n        this.media = media;\r\n        this._setupMediaListeners();\r\n        this.peaks = peaks;\r\n        this.onPlayEnd = null;\r\n        this.buffer = null;\r\n        this.isMuted = media.muted;\r\n        this.setPlaybackRate(this.playbackRate);\r\n        this.setVolume(this.volume);\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n     *\r\n     * @return {boolean} Media paused or not\r\n     */\r\n    isPaused() {\r\n        return !this.media || this.media.paused;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.getDuration()`\r\n     *\r\n     * @return {number} Duration\r\n     */\r\n    getDuration() {\r\n        if (this.explicitDuration) {\r\n            return this.explicitDuration;\r\n        }\r\n        let duration = (this.buffer || this.media).duration;\r\n        if (duration >= Infinity) {\r\n            // streaming audio\r\n            duration = this.media.seekable.end(0);\r\n        }\r\n        return duration;\r\n    }\r\n\r\n    /**\r\n     * Returns the current time in seconds relative to the audio-clip's\r\n     * duration.\r\n     *\r\n     * @return {number} Current time\r\n     */\r\n    getCurrentTime() {\r\n        return this.media && this.media.currentTime;\r\n    }\r\n\r\n    /**\r\n     * Get the position from 0 to 1\r\n     *\r\n     * @return {number} Current position\r\n     */\r\n    getPlayedPercents() {\r\n        return this.getCurrentTime() / this.getDuration() || 0;\r\n    }\r\n\r\n    /**\r\n     * Get the audio source playback rate.\r\n     *\r\n     * @return {number} Playback rate\r\n     */\r\n    getPlaybackRate() {\r\n        return this.playbackRate || this.media.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Set the audio source playback rate.\r\n     *\r\n     * @param {number} value Playback rate\r\n     */\r\n    setPlaybackRate(value) {\r\n        this.playbackRate = value || 1;\r\n        this.media.playbackRate = this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.seekTo()`\r\n     *\r\n     * @param {number} start Position to start at in seconds\r\n     */\r\n    seekTo(start) {\r\n        if (start != null) {\r\n            this.media.currentTime = start;\r\n        }\r\n        this.clearPlayEnd();\r\n    }\r\n\r\n    /**\r\n     * Plays the loaded audio region.\r\n     *\r\n     * @param {number} start Start offset in seconds, relative to the beginning\r\n     * of a clip.\r\n     * @param {number} end When to stop, relative to the beginning of a clip.\r\n     * @emits MediaElement#play\r\n     * @return {Promise} Result\r\n     */\r\n    play(start, end) {\r\n        this.seekTo(start);\r\n        const promise = this.media.play();\r\n        end && this.setPlayEnd(end);\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Pauses the loaded audio.\r\n     *\r\n     * @emits MediaElement#pause\r\n     * @return {Promise} Result\r\n     */\r\n    pause() {\r\n        let promise;\r\n\r\n        if (this.media) {\r\n            promise = this.media.pause();\r\n        }\r\n        this.clearPlayEnd();\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Set the play end\r\n     *\r\n     * @param {number} end Where to end\r\n     */\r\n    setPlayEnd(end) {\r\n        this.clearPlayEnd();\r\n\r\n        this._onPlayEnd = time => {\r\n            if (time >= end) {\r\n                this.pause();\r\n                this.seekTo(end);\r\n            }\r\n        };\r\n        this.on('audioprocess', this._onPlayEnd);\r\n    }\r\n\r\n    /** @private */\r\n    clearPlayEnd() {\r\n        if (this._onPlayEnd) {\r\n            this.un('audioprocess', this._onPlayEnd);\r\n            this._onPlayEnd = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compute the max and min value of the waveform when broken into\r\n     * <length> subranges.\r\n     *\r\n     * @param {number} length How many subranges to break the waveform into.\r\n     * @param {number} first First sample in the required range.\r\n     * @param {number} last Last sample in the required range.\r\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\r\n     * arrays of peaks consisting of (max, min) values for each subrange.\r\n     */\r\n    getPeaks(length, first, last) {\r\n        if (this.buffer) {\r\n            return super.getPeaks(length, first, last);\r\n        }\r\n        return this.peaks || [];\r\n    }\r\n\r\n    /**\r\n     * Set the sink id for the media player\r\n     *\r\n     * @param {string} deviceId String value representing audio device id.\r\n     * @returns {Promise} A Promise that resolves to `undefined` when there\r\n     * are no errors.\r\n     */\r\n    setSinkId(deviceId) {\r\n        if (deviceId) {\r\n            if (!this.media.setSinkId) {\r\n                return Promise.reject(\r\n                    new Error('setSinkId is not supported in your browser')\r\n                );\r\n            }\r\n            return this.media.setSinkId(deviceId);\r\n        }\r\n\r\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n    }\r\n\r\n    /**\r\n     * Get the current volume\r\n     *\r\n     * @return {number} value A floating point value between 0 and 1.\r\n     */\r\n    getVolume() {\r\n        return this.volume;\r\n    }\r\n\r\n    /**\r\n     * Set the audio volume\r\n     *\r\n     * @param {number} value A floating point value between 0 and 1.\r\n     */\r\n    setVolume(value) {\r\n        this.volume = value;\r\n        // no need to change when it's already at that volume\r\n        if (this.media.volume !== this.volume) {\r\n            this.media.volume = this.volume;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     *\r\n     */\r\n    destroy() {\r\n        this.pause();\r\n        this.unAll();\r\n        this.destroyed = true;\r\n\r\n        // cleanup media event listeners\r\n        Object.keys(this.mediaListeners).forEach(id => {\r\n            if (this.media) {\r\n                this.media.removeEventListener(id, this.mediaListeners[id]);\r\n            }\r\n        });\r\n\r\n        if (\r\n            this.params.removeMediaElementOnDestroy &&\r\n            this.media &&\r\n            this.media.parentNode\r\n        ) {\r\n            this.media.parentNode.removeChild(this.media);\r\n        }\r\n\r\n        this.media = null;\r\n    }\r\n}\r\n","/**\r\n * Caches the decoded peaks data to improve rendering speed for large audio\r\n *\r\n * Is used if the option parameter `partialRender` is set to `true`\r\n */\r\nexport default class PeakCache {\r\n    /**\r\n     * Instantiate cache\r\n     */\r\n    constructor() {\r\n        this.clearPeakCache();\r\n    }\r\n\r\n    /**\r\n     * Empty the cache\r\n     */\r\n    clearPeakCache() {\r\n        /**\r\n         * Flat array with entries that are always in pairs to mark the\r\n         * beginning and end of each subrange.  This is a convenience so we can\r\n         * iterate over the pairs for easy set difference operations.\r\n         * @private\r\n         */\r\n        this.peakCacheRanges = [];\r\n        /**\r\n         * Length of the entire cachable region, used for resetting the cache\r\n         * when this changes (zoom events, for instance).\r\n         * @private\r\n         */\r\n        this.peakCacheLength = -1;\r\n    }\r\n\r\n    /**\r\n     * Add a range of peaks to the cache\r\n     *\r\n     * @param {number} length The length of the range\r\n     * @param {number} start The x offset of the start of the range\r\n     * @param {number} end The x offset of the end of the range\r\n     * @return {Number.<Array[]>} Array with arrays of numbers\r\n     */\r\n    addRangeToPeakCache(length, start, end) {\r\n        if (length != this.peakCacheLength) {\r\n            this.clearPeakCache();\r\n            this.peakCacheLength = length;\r\n        }\r\n\r\n        // Return ranges that weren't in the cache before the call.\r\n        let uncachedRanges = [];\r\n        let i = 0;\r\n        // Skip ranges before the current start.\r\n        while (\r\n            i < this.peakCacheRanges.length &&\r\n            this.peakCacheRanges[i] < start\r\n        ) {\r\n            i++;\r\n        }\r\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\r\n        // |start| falls between an existing range, and the uncached region\r\n        // starts when we encounter the next node in |peakCacheRanges| or\r\n        // |end|, whichever comes first.\r\n        if (i % 2 == 0) {\r\n            uncachedRanges.push(start);\r\n        }\r\n        while (\r\n            i < this.peakCacheRanges.length &&\r\n            this.peakCacheRanges[i] <= end\r\n        ) {\r\n            uncachedRanges.push(this.peakCacheRanges[i]);\r\n            i++;\r\n        }\r\n        // If |i| is even, |end| is after all existing ranges.\r\n        if (i % 2 == 0) {\r\n            uncachedRanges.push(end);\r\n        }\r\n\r\n        // Filter out the 0-length ranges.\r\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\r\n            if (pos == 0) {\r\n                return item != arr[pos + 1];\r\n            } else if (pos == arr.length - 1) {\r\n                return item != arr[pos - 1];\r\n            }\r\n            return item != arr[pos - 1] && item != arr[pos + 1];\r\n        });\r\n\r\n        // Merge the two ranges together, uncachedRanges will either contain\r\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\r\n        // duplicates are detected, remove both and extend the range.\r\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\r\n        this.peakCacheRanges = this.peakCacheRanges\r\n            .sort((a, b) => a - b)\r\n            .filter((item, pos, arr) => {\r\n                if (pos == 0) {\r\n                    return item != arr[pos + 1];\r\n                } else if (pos == arr.length - 1) {\r\n                    return item != arr[pos - 1];\r\n                }\r\n                return item != arr[pos - 1] && item != arr[pos + 1];\r\n            });\r\n\r\n        // Push the uncached ranges into an array of arrays for ease of\r\n        // iteration in the functions that call this.\r\n        const uncachedRangePairs = [];\r\n        for (i = 0; i < uncachedRanges.length; i += 2) {\r\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\r\n        }\r\n\r\n        return uncachedRangePairs;\r\n    }\r\n\r\n    /**\r\n     * For testing\r\n     *\r\n     * @return {Number.<Array[]>} Array with arrays of numbers\r\n     */\r\n    getCacheRanges() {\r\n        const peakCacheRangePairs = [];\r\n        let i;\r\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\r\n            peakCacheRangePairs.push([\r\n                this.peakCacheRanges[i],\r\n                this.peakCacheRanges[i + 1]\r\n            ]);\r\n        }\r\n        return peakCacheRangePairs;\r\n    }\r\n}\r\n","import Observer from './observer';\r\n\r\n/**\r\n * Perform an ajax request using `XMLHttpRequest`.\r\n *\r\n * @deprecated Use `util.fetchFile` instead.\r\n *\r\n * @param {Object} options AJAX options to use. See example below for options.\r\n * @returns {Observer} Observer instance\r\n * @example\r\n * // default options\r\n * let options = {\r\n *     method: 'GET',\r\n *     url: undefined,\r\n *     responseType: 'json',\r\n *     xhr: {}\r\n * };\r\n *\r\n * // override default options\r\n * options.url = '../media/demo.wav';\r\n * options.responseType = 'arraybuffer';\r\n * options.xhr = {\r\n *     requestHeaders: [\r\n *         {\r\n *             key: 'Authorization',\r\n *             value: 'my-token'\r\n *         }\r\n *     ],\r\n *     withCredentials: true\r\n * };\r\n *\r\n * // make ajax call\r\n * let ajaxCall = util.ajax(options);\r\n * ajaxCall.on('progress', e => {\r\n *     console.log('progress', e);\r\n * });\r\n * ajaxCall.on('success', (data, e) => {\r\n *     console.log('success!', data);\r\n * });\r\n * ajaxCall.on('error', e => {\r\n *     console.warn('ajax error: ' + e.target.statusText);\r\n * });\r\n */\r\nexport default function ajax(options) {\r\n    const instance = new Observer();\r\n    const xhr = new XMLHttpRequest();\r\n    let fired100 = false;\r\n    xhr.open(options.method || 'GET', options.url, true);\r\n    xhr.responseType = options.responseType || 'json';\r\n\r\n    if (options.xhr) {\r\n        if (options.xhr.requestHeaders) {\r\n            // add custom request headers\r\n            options.xhr.requestHeaders.forEach(header => {\r\n                xhr.setRequestHeader(header.key, header.value);\r\n            });\r\n        }\r\n        if (options.xhr.withCredentials) {\r\n            // use credentials\r\n            xhr.withCredentials = true;\r\n        }\r\n    }\r\n\r\n    xhr.addEventListener('progress', e => {\r\n        instance.fireEvent('progress', e);\r\n        if (e.lengthComputable && e.loaded == e.total) {\r\n            fired100 = true;\r\n        }\r\n    });\r\n    xhr.addEventListener('load', e => {\r\n        if (!fired100) {\r\n            instance.fireEvent('progress', e);\r\n        }\r\n        instance.fireEvent('load', e);\r\n        if (200 == xhr.status || 206 == xhr.status) {\r\n            instance.fireEvent('success', xhr.response, e);\r\n        } else {\r\n            instance.fireEvent('error', e);\r\n        }\r\n    });\r\n    xhr.addEventListener('error', e => instance.fireEvent('error', e));\r\n    xhr.send();\r\n    instance.xhr = xhr;\r\n    return instance;\r\n}\r\n","/**\r\n * Extend an object shallowly with others\r\n *\r\n * @param {Object} dest The target object\r\n * @param {Object[]} sources The objects to use for extending\r\n *\r\n * @return {Object} Merged object\r\n * @deprecated since version 3.3.0\r\n */\r\nexport default function extend(dest, ...sources) {\r\n    console.warn('util.extend is deprecated; use Object.assign instead');\r\n    sources.forEach(source => {\r\n        Object.keys(source).forEach(key => {\r\n            dest[key] = source[key];\r\n        });\r\n    });\r\n    return dest;\r\n}\r\n","/**\r\n * @since 3.0.0\r\n */\r\n\r\nimport Observer from './observer';\r\n\r\nclass ProgressHandler {\r\n    /**\r\n     * Instantiate ProgressHandler\r\n     *\r\n     * @param {Observer} instance The `fetchFile` observer instance.\r\n     * @param {Number} contentLength Content length.\r\n     * @param {Response} response Response object.\r\n     */\r\n    constructor(instance, contentLength, response) {\r\n        this.instance = instance;\r\n        this.instance._reader = response.body.getReader();\r\n\r\n        this.total = parseInt(contentLength, 10);\r\n        this.loaded = 0;\r\n    }\r\n\r\n    /**\r\n     * A method that is called once, immediately after the `ReadableStream``\r\n     * is constructed.\r\n     *\r\n     * @param {ReadableStreamDefaultController} controller Controller instance\r\n     *     used to control the stream.\r\n     */\r\n    start(controller) {\r\n        const read = () => {\r\n            // instance._reader.read() returns a promise that resolves\r\n            // when a value has been received\r\n            this.instance._reader\r\n                .read()\r\n                .then(({ done, value }) => {\r\n                    // result objects contain two properties:\r\n                    // done  - true if the stream has already given you all its data.\r\n                    // value - some data. Always undefined when done is true.\r\n                    if (done) {\r\n                        // ensure onProgress called when content-length=0\r\n                        if (this.total === 0) {\r\n                            this.instance.onProgress.call(this.instance, {\r\n                                loaded: this.loaded,\r\n                                total: this.total,\r\n                                lengthComputable: false\r\n                            });\r\n                        }\r\n                        // no more data needs to be consumed, close the stream\r\n                        controller.close();\r\n                        return;\r\n                    }\r\n\r\n                    this.loaded += value.byteLength;\r\n                    this.instance.onProgress.call(this.instance, {\r\n                        loaded: this.loaded,\r\n                        total: this.total,\r\n                        lengthComputable: !(this.total === 0)\r\n                    });\r\n                    // enqueue the next data chunk into our target stream\r\n                    controller.enqueue(value);\r\n                    read();\r\n                })\r\n                .catch(error => {\r\n                    controller.error(error);\r\n                });\r\n        };\r\n\r\n        read();\r\n    }\r\n}\r\n\r\n/**\r\n * Load a file using `fetch`.\r\n *\r\n * @param {object} options Request options to use. See example below.\r\n * @returns {Observer} Observer instance\r\n * @example\r\n * // default options\r\n * let options = {\r\n *     url: undefined,\r\n *     method: 'GET',\r\n *     mode: 'cors',\r\n *     credentials: 'same-origin',\r\n *     cache: 'default',\r\n *     responseType: 'json',\r\n *     requestHeaders: [],\r\n *     redirect: 'follow',\r\n *     referrer: 'client'\r\n * };\r\n *\r\n * // override some options\r\n * options.url = '../media/demo.wav';\r\n\r\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\r\n * options.responseType = 'arraybuffer';\r\n *\r\n * // make fetch call\r\n * let request = util.fetchFile(options);\r\n *\r\n * // listen for events\r\n * request.on('progress', e => {\r\n *     console.log('progress', e);\r\n * });\r\n *\r\n * request.on('success', data => {\r\n *     console.log('success!', data);\r\n * });\r\n *\r\n * request.on('error', e => {\r\n *     console.warn('fetchFile error: ', e);\r\n * });\r\n */\r\nexport default function fetchFile(options) {\r\n    if (!options) {\r\n        throw new Error('fetch options missing');\r\n    } else if (!options.url) {\r\n        throw new Error('fetch url missing');\r\n    }\r\n    const instance = new Observer();\r\n    const fetchHeaders = new Headers();\r\n    const fetchRequest = new Request(options.url);\r\n\r\n    // add ability to abort\r\n    instance.controller = new AbortController();\r\n\r\n    // check if headers have to be added\r\n    if (options && options.requestHeaders) {\r\n        // add custom request headers\r\n        options.requestHeaders.forEach(header => {\r\n            fetchHeaders.append(header.key, header.value);\r\n        });\r\n    }\r\n\r\n    // parse fetch options\r\n    const responseType = options.responseType || 'json';\r\n    const fetchOptions = {\r\n        method: options.method || 'GET',\r\n        headers: fetchHeaders,\r\n        mode: options.mode || 'cors',\r\n        credentials: options.credentials || 'same-origin',\r\n        cache: options.cache || 'default',\r\n        redirect: options.redirect || 'follow',\r\n        referrer: options.referrer || 'client',\r\n        signal: instance.controller.signal\r\n    };\r\n\r\n    fetch(fetchRequest, fetchOptions)\r\n        .then(response => {\r\n            // store response reference\r\n            instance.response = response;\r\n\r\n            let progressAvailable = true;\r\n            if (\r\n                !response.body ||\r\n                document.documentMode ||\r\n                /Edge/.test(navigator.userAgent)\r\n            ) {\r\n                // ReadableStream is not yet supported in this browser\r\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\r\n                progressAvailable = false;\r\n            }\r\n\r\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\r\n            const contentLength = response.headers.get('content-length');\r\n            if (contentLength === null) {\r\n                // Content-Length server response header missing.\r\n                // Don't evaluate download progress if we can't compare against a total size\r\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\r\n                progressAvailable = false;\r\n            }\r\n\r\n            if (!progressAvailable) {\r\n                // not able to check download progress so skip it\r\n                return response;\r\n            }\r\n\r\n            // fire progress event when during load\r\n            instance.onProgress = e => {\r\n                instance.fireEvent('progress', e);\r\n            };\r\n\r\n            return new Response(\r\n                new ReadableStream(\r\n                    new ProgressHandler(instance, contentLength, response)\r\n                ),\r\n                fetchOptions\r\n            );\r\n        })\r\n        .then(response => {\r\n            let errMsg;\r\n            if (response.ok) {\r\n                switch (responseType) {\r\n                    case 'arraybuffer':\r\n                        return response.arrayBuffer();\r\n\r\n                    case 'json':\r\n                        return response.json();\r\n\r\n                    case 'blob':\r\n                        return response.blob();\r\n\r\n                    case 'text':\r\n                        return response.text();\r\n\r\n                    default:\r\n                        errMsg = 'Unknown responseType: ' + responseType;\r\n                        break;\r\n                }\r\n            }\r\n            if (!errMsg) {\r\n                errMsg = 'HTTP error status: ' + response.status;\r\n            }\r\n            throw new Error(errMsg);\r\n        })\r\n        .then(response => {\r\n            instance.fireEvent('success', response);\r\n        })\r\n        .catch(error => {\r\n            instance.fireEvent('error', error);\r\n        });\r\n\r\n    // return the fetch request\r\n    instance.fetchRequest = fetchRequest;\r\n    return instance;\r\n}\r\n","import reqAnimationFrame from './request-animation-frame';\r\n\r\n/**\r\n * Create a function which will be called at the next requestAnimationFrame\r\n * cycle\r\n *\r\n * @param {function} func The function to call\r\n *\r\n * @return {func} The function wrapped within a requestAnimationFrame\r\n */\r\nexport default function frame(func) {\r\n    return (...args) => reqAnimationFrame(() => func(...args));\r\n}\r\n","/**\r\n * Get a random prefixed ID\r\n *\r\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\r\n * @returns {String} Random prefixed ID\r\n * @example\r\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\r\n *\r\n * let prefix = 'foo-';\r\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\r\n */\r\nexport default function getId(prefix) {\r\n    if (prefix === undefined) {\r\n        prefix = 'wavesurfer_';\r\n    }\r\n    return (\r\n        prefix +\r\n        Math.random()\r\n            .toString(32)\r\n            .substring(2)\r\n    );\r\n}\r\n","export { default as ajax } from './ajax';\r\nexport { default as getId } from './get-id';\r\nexport { default as max } from './max';\r\nexport { default as min } from './min';\r\nexport { default as Observer } from './observer';\r\nexport { default as extend } from './extend';\r\nexport { default as style } from './style';\r\nexport { default as requestAnimationFrame } from './request-animation-frame';\r\nexport { default as frame } from './frame';\r\nexport { default as debounce } from 'debounce';\r\nexport { default as preventClick } from './prevent-click';\r\nexport { default as fetchFile } from './fetch';\r\n","/**\r\n * Get the largest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([1, 2, 3])); // logs 3\r\n */\r\nexport default function max(values) {\r\n    let largest = -Infinity;\r\n    Object.keys(values).forEach(i => {\r\n        if (values[i] > largest) {\r\n            largest = values[i];\r\n        }\r\n    });\r\n    return largest;\r\n}\r\n","/**\r\n * Get the smallest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Smallest number found\r\n * @example console.log(min([1, 2, 3])); // logs 1\r\n */\r\nexport default function min(values) {\r\n    let smallest = Number(Infinity);\r\n    Object.keys(values).forEach(i => {\r\n        if (values[i] < smallest) {\r\n            smallest = values[i];\r\n        }\r\n    });\r\n    return smallest;\r\n}\r\n","/**\r\n * @typedef {Object} ListenerDescriptor\r\n * @property {string} name The name of the event\r\n * @property {function} callback The callback\r\n * @property {function} un The function to call to remove the listener\r\n */\r\n\r\n/**\r\n * Observer class\r\n */\r\nexport default class Observer {\r\n    /**\r\n     * Instantiate Observer\r\n     */\r\n    constructor() {\r\n        /**\r\n         * @private\r\n         * @todo Initialise the handlers here already and remove the conditional\r\n         * assignment in `on()`\r\n         */\r\n        this.handlers = null;\r\n    }\r\n    /**\r\n     * Attach a handler function for an event.\r\n     *\r\n     * @param {string} event Name of the event to listen to\r\n     * @param {function} fn The callback to trigger when the event is fired\r\n     * @return {ListenerDescriptor} The event descriptor\r\n     */\r\n    on(event, fn) {\r\n        if (!this.handlers) {\r\n            this.handlers = {};\r\n        }\r\n\r\n        let handlers = this.handlers[event];\r\n        if (!handlers) {\r\n            handlers = this.handlers[event] = [];\r\n        }\r\n        handlers.push(fn);\r\n\r\n        // Return an event descriptor\r\n        return {\r\n            name: event,\r\n            callback: fn,\r\n            un: (e, fn) => this.un(e, fn)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Remove an event handler.\r\n     *\r\n     * @param {string} event Name of the event the listener that should be\r\n     * removed listens to\r\n     * @param {function} fn The callback that should be removed\r\n     */\r\n    un(event, fn) {\r\n        if (!this.handlers) {\r\n            return;\r\n        }\r\n\r\n        const handlers = this.handlers[event];\r\n        let i;\r\n        if (handlers) {\r\n            if (fn) {\r\n                for (i = handlers.length - 1; i >= 0; i--) {\r\n                    if (handlers[i] == fn) {\r\n                        handlers.splice(i, 1);\r\n                    }\r\n                }\r\n            } else {\r\n                handlers.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all event handlers.\r\n     */\r\n    unAll() {\r\n        this.handlers = null;\r\n    }\r\n\r\n    /**\r\n     * Attach a handler to an event. The handler is executed at most once per\r\n     * event type.\r\n     *\r\n     * @param {string} event The event to listen to\r\n     * @param {function} handler The callback that is only to be called once\r\n     * @return {ListenerDescriptor} The event descriptor\r\n     */\r\n    once(event, handler) {\r\n        const fn = (...args) => {\r\n            /*  eslint-disable no-invalid-this */\r\n            handler.apply(this, args);\r\n            /*  eslint-enable no-invalid-this */\r\n            setTimeout(() => {\r\n                this.un(event, fn);\r\n            }, 0);\r\n        };\r\n        return this.on(event, fn);\r\n    }\r\n\r\n    /**\r\n     * Manually fire an event\r\n     *\r\n     * @param {string} event The event to fire manually\r\n     * @param {...any} args The arguments with which to call the listeners\r\n     */\r\n    fireEvent(event, ...args) {\r\n        if (!this.handlers) {\r\n            return;\r\n        }\r\n        const handlers = this.handlers[event];\r\n        handlers &&\r\n            handlers.forEach(fn => {\r\n                fn(...args);\r\n            });\r\n    }\r\n}\r\n","/**\r\n * Stops propagation of click event and removes event listener\r\n *\r\n * @private\r\n * @param {object} event The click event\r\n */\r\nfunction preventClickHandler(event) {\r\n    event.stopPropagation();\r\n    document.body.removeEventListener('click', preventClickHandler, true);\r\n}\r\n\r\n/**\r\n * Starts listening for click event and prevent propagation\r\n *\r\n * @param {object} values Values\r\n */\r\nexport default function preventClick(values) {\r\n    document.body.addEventListener('click', preventClickHandler, true);\r\n}\r\n","/* eslint-disable valid-jsdoc */\r\n/**\r\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\r\n * `setTimeout` if the function is not found\r\n *\r\n * @return {function} Available `requestAnimationFrame` function for the browser\r\n */\r\nexport default (\r\n    window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    ((callback, element) => setTimeout(callback, 1000 / 60))\r\n).bind(window);\r\n","/**\r\n * Apply a map of styles to an element\r\n *\r\n * @param {HTMLElement} el The element that the styles will be applied to\r\n * @param {Object} styles The map of propName: attribute, both are used as-is\r\n *\r\n * @return {HTMLElement} el\r\n */\r\nexport default function style(el, styles) {\r\n    Object.keys(styles).forEach(prop => {\r\n        if (el.style[prop] !== styles[prop]) {\r\n            el.style[prop] = styles[prop];\r\n        }\r\n    });\r\n    return el;\r\n}\r\n","import * as util from './util';\r\nimport MultiCanvas from './drawer.multicanvas';\r\nimport WebAudio from './webaudio';\r\nimport MediaElement from './mediaelement';\r\nimport PeakCache from './peakcache';\r\nimport MediaElementWebAudio from './mediaelement-webaudio';\r\n\r\n/*\r\n * This work is licensed under a BSD-3-Clause License.\r\n */\r\n\r\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\r\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\r\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\r\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\r\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\r\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\r\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\r\n\r\n/**\r\n * @typedef {Object} WavesurferParams\r\n * @property {AudioContext} audioContext=null Use your own previously\r\n * initialized AudioContext or leave blank.\r\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\r\n * slower.\r\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\r\n * initialized ScriptProcessorNode or leave blank.\r\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\r\n * waveform on current progress\r\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\r\n * waveform is centered\r\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\r\n * center waveform on current progress\r\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\r\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\r\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\r\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\r\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\r\n * also with audio with big duration. For example:\r\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\r\n *   wavesurfer.play();\r\n *   wavesurfer.setFilter(customFilter);\r\n * `\r\n * @property {string} backgroundColor=null Change background color of the\r\n * waveform container.\r\n * @property {number} barHeight=1 The height of the wave bars.\r\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\r\n * @property {number} barGap=null The optional spacing between bars of the wave,\r\n * if not provided will be calculated in legacy format.\r\n * @property {number} barWidth=null Draw the waveform using bars.\r\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\r\n * eliminating waveform gaps\r\n * @property {boolean} closeAudioContext=false Close and nullify all audio\r\n * contexts when the destroy method is called.\r\n * @property {!string|HTMLElement} container CSS selector or HTML element where\r\n * the waveform should be drawn. This is the only required parameter.\r\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\r\n * the playhead position.\r\n * @property {number} cursorWidth=1 Measured in pixels.\r\n * @property {object} drawingContextAttributes={desynchronized: true} Drawing context\r\n * attributes.\r\n * @property {number} duration=null Optional audio length so pre-rendered peaks\r\n * can be display immediately for example.\r\n * @property {boolean} fillParent=true Whether to fill the entire container or\r\n * draw only according to `minPxPerSec`.\r\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\r\n * when zooming to get a more detailed waveform.\r\n * @property {number} height=128 The height of the waveform. Measured in\r\n * pixels.\r\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\r\n * scrollbar when one would normally be shown.\r\n * @property {boolean} interact=true Whether the mouse interaction will be\r\n * enabled at initialization. You can switch this parameter at any time later\r\n * on.\r\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\r\n * looping of selected regions\r\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\r\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\r\n * even integer). If the waveform is longer than this value, additional canvases\r\n * will be used to render the waveform, which is useful for very large waveforms\r\n * that may be too wide for browsers to draw on a single canvas.\r\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\r\n * this enables the native controls for the media element\r\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\r\n * `'audio'|'video'` ('video' only for `MediaElement`)\r\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\r\n * audio.\r\n * @property {boolean} normalize=false If true, normalize by the maximum peak\r\n * instead of 1.0.\r\n * @property {boolean} partialRender=false Use the PeakCache to improve\r\n * rendering speed of large waveforms\r\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\r\n * calculate display\r\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\r\n * register during instantiation, they will be directly initialised unless they\r\n * are added with the `deferInit` property set to true.\r\n * @property {string} progressColor='#555' The fill color of the part of the\r\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\r\n * the progress wave is not rendered at all.\r\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\r\n * media element in the DOM when the player is destroyed. This is useful when\r\n * reusing an existing media element via the `loadMediaElement` method.\r\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\r\n * renderer.\r\n * @property {boolean|number} responsive=false If set to `true` resize the\r\n * waveform, when the window is resized. This is debounced with a `100ms`\r\n * timeout by default. If this parameter is a number it represents that timeout.\r\n * @property {boolean} rtl=false If set to `true`, renders waveform from\r\n * right-to-left.\r\n * @property {boolean} scrollParent=false Whether to scroll the container with a\r\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\r\n * (see fillParent).\r\n * @property {number} skipLength=2 Number of seconds to skip with the\r\n * skipForward() and skipBackward() methods.\r\n * @property {boolean} splitChannels=false Render with separate waveforms for\r\n * the channels of the audio\r\n * @property {string} waveColor='#999' The fill color of the waveform after the\r\n * cursor.\r\n * @property {object} xhr={} XHR options. For example:\r\n * `let xhr = {\r\n *     cache: 'default',\r\n *     mode: 'cors',\r\n *     method: 'GET',\r\n *     credentials: 'same-origin',\r\n *     redirect: 'follow',\r\n *     referrer: 'client',\r\n *     headers: [\r\n *         {\r\n *             key: 'Authorization',\r\n *             value: 'my-token'\r\n *         }\r\n *     ]\r\n * };`\r\n */\r\n\r\n/**\r\n * @typedef {Object} PluginDefinition\r\n * @desc The Object used to describe a plugin\r\n * @example wavesurfer.addPlugin(pluginDefinition);\r\n * @property {string} name The name of the plugin, the plugin instance will be\r\n * added as a property to the wavesurfer instance under this name\r\n * @property {?Object} staticProps The properties that should be added to the\r\n * wavesurfer instance as static properties\r\n * @property {?boolean} deferInit Don't initialise plugin\r\n * automatically\r\n * @property {Object} params={} The plugin parameters, they are the first parameter\r\n * passed to the plugin class constructor function\r\n * @property {PluginClass} instance The plugin instance factory, is called with\r\n * the dependency specified in extends. Returns the plugin class.\r\n */\r\n\r\n/**\r\n * @interface PluginClass\r\n *\r\n * @desc This is the interface which is implemented by all plugin classes. Note\r\n * that this only turns into an observer after being passed through\r\n * `wavesurfer.addPlugin`.\r\n *\r\n * @extends {Observer}\r\n */\r\nclass PluginClass {\r\n    /**\r\n     * Plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * It returns a `PluginDefinition` object representing the plugin.\r\n     *\r\n     * @param {Object} params={} The plugin params (specific to the plugin)\r\n     */\r\n    create(params) {}\r\n    /**\r\n     * Construct the plugin\r\n     *\r\n     * @param {Object} params={} The plugin params (specific to the plugin)\r\n     * @param {Object} ws The wavesurfer instance\r\n     */\r\n    constructor(params, ws) {}\r\n    /**\r\n     * Initialise the plugin\r\n     *\r\n     * Start doing something. This is called by\r\n     * `wavesurfer.initPlugin(pluginName)`\r\n     */\r\n    init() {}\r\n    /**\r\n     * Destroy the plugin instance\r\n     *\r\n     * Stop doing something. This is called by\r\n     * `wavesurfer.destroyPlugin(pluginName)`\r\n     */\r\n    destroy() {}\r\n}\r\n\r\n/**\r\n * WaveSurfer core library class\r\n *\r\n * @extends {Observer}\r\n * @example\r\n * const params = {\r\n *   container: '#waveform',\r\n *   waveColor: 'violet',\r\n *   progressColor: 'purple'\r\n * };\r\n *\r\n * // initialise like this\r\n * const wavesurfer = WaveSurfer.create(params);\r\n *\r\n * // or like this ...\r\n * const wavesurfer = new WaveSurfer(params);\r\n * wavesurfer.init();\r\n *\r\n * // load audio file\r\n * wavesurfer.load('example/media/demo.wav');\r\n */\r\nexport default class WaveSurfer extends util.Observer {\r\n    /** @private */\r\n    defaultParams = {\r\n        audioContext: null,\r\n        audioScriptProcessor: null,\r\n        audioRate: 1,\r\n        autoCenter: true,\r\n        autoCenterRate: 5,\r\n        autoCenterImmediately: false,\r\n        backend: 'WebAudio',\r\n        backgroundColor: null,\r\n        barHeight: 1,\r\n        barRadius: 0,\r\n        barGap: null,\r\n        barMinHeight: null,\r\n        container: null,\r\n        cursorColor: '#333',\r\n        cursorWidth: 1,\r\n        dragSelection: true,\r\n        drawingContextAttributes: {\r\n            // Boolean that hints the user agent to reduce the latency\r\n            // by desynchronizing the canvas paint cycle from the event\r\n            // loop\r\n            desynchronized: false\r\n        },\r\n        duration: null,\r\n        fillParent: true,\r\n        forceDecode: false,\r\n        height: 128,\r\n        hideScrollbar: false,\r\n        interact: true,\r\n        loopSelection: true,\r\n        maxCanvasWidth: 4000,\r\n        mediaContainer: null,\r\n        mediaControls: false,\r\n        mediaType: 'audio',\r\n        minPxPerSec: 20,\r\n        normalize: false,\r\n        partialRender: false,\r\n        pixelRatio:\r\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\r\n        plugins: [],\r\n        progressColor: '#555',\r\n        removeMediaElementOnDestroy: true,\r\n        renderer: MultiCanvas,\r\n        responsive: false,\r\n        rtl: false,\r\n        scrollParent: false,\r\n        skipLength: 2,\r\n        splitChannels: false,\r\n        waveColor: '#999',\r\n        xhr: {}\r\n    };\r\n\r\n    /** @private */\r\n    backends = {\r\n        MediaElement,\r\n        WebAudio,\r\n        MediaElementWebAudio\r\n    };\r\n\r\n    /**\r\n     * Instantiate this class, call its `init` function and returns it\r\n     *\r\n     * @param {WavesurferParams} params The wavesurfer parameters\r\n     * @return {Object} WaveSurfer instance\r\n     * @example const wavesurfer = WaveSurfer.create(params);\r\n     */\r\n    static create(params) {\r\n        const wavesurfer = new WaveSurfer(params);\r\n        return wavesurfer.init();\r\n    }\r\n\r\n    /**\r\n     * The library version number is available as a static property of the\r\n     * WaveSurfer class\r\n     *\r\n     * @type {String}\r\n     * @example\r\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\r\n     */\r\n    static VERSION = __VERSION__;\r\n\r\n    /**\r\n     * Functions in the `util` property are available as a prototype property to\r\n     * all instances\r\n     *\r\n     * @type {Object}\r\n     * @example\r\n     * const wavesurfer = WaveSurfer.create(params);\r\n     * wavesurfer.util.style(myElement, { background: 'blue' });\r\n     */\r\n    util = util;\r\n\r\n    /**\r\n     * Functions in the `util` property are available as a static property of the\r\n     * WaveSurfer class\r\n     *\r\n     * @type {Object}\r\n     * @example\r\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\r\n     */\r\n    static util = util;\r\n\r\n    /**\r\n     * Initialise wavesurfer instance\r\n     *\r\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\r\n     * @example\r\n     * const wavesurfer = new WaveSurfer(params);\r\n     * @returns {this} Wavesurfer instance\r\n     */\r\n    constructor(params) {\r\n        super();\r\n        /**\r\n         * Extract relevant parameters (or defaults)\r\n         * @private\r\n         */\r\n        this.params = Object.assign({}, this.defaultParams, params);\r\n\r\n        /** @private */\r\n        this.container =\r\n            'string' == typeof params.container\r\n                ? document.querySelector(this.params.container)\r\n                : this.params.container;\r\n\r\n        if (!this.container) {\r\n            throw new Error('Container element not found');\r\n        }\r\n\r\n        if (this.params.mediaContainer == null) {\r\n            /** @private */\r\n            this.mediaContainer = this.container;\r\n        } else if (typeof this.params.mediaContainer == 'string') {\r\n            /** @private */\r\n            this.mediaContainer = document.querySelector(\r\n                this.params.mediaContainer\r\n            );\r\n        } else {\r\n            /** @private */\r\n            this.mediaContainer = this.params.mediaContainer;\r\n        }\r\n\r\n        if (!this.mediaContainer) {\r\n            throw new Error('Media Container element not found');\r\n        }\r\n\r\n        if (this.params.maxCanvasWidth <= 1) {\r\n            throw new Error('maxCanvasWidth must be greater than 1');\r\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\r\n            throw new Error('maxCanvasWidth must be an even number');\r\n        }\r\n\r\n        if (this.params.rtl === true) {\r\n            util.style(this.container, { transform: 'rotateY(180deg)' });\r\n        }\r\n\r\n        if (this.params.backgroundColor) {\r\n            this.setBackgroundColor(this.params.backgroundColor);\r\n        }\r\n\r\n        /**\r\n         * @private Used to save the current volume when muting so we can\r\n         * restore once unmuted\r\n         * @type {number}\r\n         */\r\n        this.savedVolume = 0;\r\n\r\n        /**\r\n         * @private The current muted state\r\n         * @type {boolean}\r\n         */\r\n        this.isMuted = false;\r\n\r\n        /**\r\n         * @private Will hold a list of event descriptors that need to be\r\n         * canceled on subsequent loads of audio\r\n         * @type {Object[]}\r\n         */\r\n        this.tmpEvents = [];\r\n\r\n        /**\r\n         * @private Holds any running audio downloads\r\n         * @type {Observer}\r\n         */\r\n        this.currentRequest = null;\r\n        /** @private */\r\n        this.arraybuffer = null;\r\n        /** @private */\r\n        this.drawer = null;\r\n        /** @private */\r\n        this.backend = null;\r\n        /** @private */\r\n        this.peakCache = null;\r\n\r\n        // cache constructor objects\r\n        if (typeof this.params.renderer !== 'function') {\r\n            throw new Error('Renderer parameter is invalid');\r\n        }\r\n        /**\r\n         * @private The uninitialised Drawer class\r\n         */\r\n        this.Drawer = this.params.renderer;\r\n        /**\r\n         * @private The uninitialised Backend class\r\n         */\r\n        // Back compat\r\n        if (this.params.backend == 'AudioElement') {\r\n            this.params.backend = 'MediaElement';\r\n        }\r\n\r\n        if (\r\n            (this.params.backend == 'WebAudio' ||\r\n                this.params.backend === 'MediaElementWebAudio') &&\r\n            !WebAudio.prototype.supportsWebAudio.call(null)\r\n        ) {\r\n            this.params.backend = 'MediaElement';\r\n        }\r\n        this.Backend = this.backends[this.params.backend];\r\n\r\n        /**\r\n         * @private map of plugin names that are currently initialised\r\n         */\r\n        this.initialisedPluginList = {};\r\n        /** @private */\r\n        this.isDestroyed = false;\r\n\r\n        /**\r\n         * Get the current ready status.\r\n         *\r\n         * @example const isReady = wavesurfer.isReady;\r\n         * @return {boolean}\r\n         */\r\n        this.isReady = false;\r\n\r\n        // responsive debounced event listener. If this.params.responsive is not\r\n        // set, this is never called. Use 100ms or this.params.responsive as\r\n        // timeout for the debounce function.\r\n        let prevWidth = 0;\r\n        this._onResize = util.debounce(\r\n            () => {\r\n                if (\r\n                    prevWidth != this.drawer.wrapper.clientWidth &&\r\n                    !this.params.scrollParent\r\n                ) {\r\n                    prevWidth = this.drawer.wrapper.clientWidth;\r\n                    this.drawer.fireEvent('redraw');\r\n                }\r\n            },\r\n            typeof this.params.responsive === 'number'\r\n                ? this.params.responsive\r\n                : 100\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Initialise the wave\r\n     *\r\n     * @example\r\n     * var wavesurfer = new WaveSurfer(params);\r\n     * wavesurfer.init();\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    init() {\r\n        this.registerPlugins(this.params.plugins);\r\n        this.createDrawer();\r\n        this.createBackend();\r\n        this.createPeakCache();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\r\n     * this function is called in the init function of wavesurfer\r\n     *\r\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\r\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    registerPlugins(plugins) {\r\n        // first instantiate all the plugins\r\n        plugins.forEach(plugin => this.addPlugin(plugin));\r\n\r\n        // now run the init functions\r\n        plugins.forEach(plugin => {\r\n            // call init function of the plugin if deferInit is falsey\r\n            // in that case you would manually use initPlugins()\r\n            if (!plugin.deferInit) {\r\n                this.initPlugin(plugin.name);\r\n            }\r\n        });\r\n        this.fireEvent('plugins-registered', plugins);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get a map of plugin names that are currently initialised\r\n     *\r\n     * @example wavesurfer.getPlugins();\r\n     * @return {Object} Object with plugin names\r\n     */\r\n    getActivePlugins() {\r\n        return this.initialisedPluginList;\r\n    }\r\n\r\n    /**\r\n     * Add a plugin object to wavesurfer\r\n     *\r\n     * @param {PluginDefinition} plugin A plugin definition\r\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\r\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    addPlugin(plugin) {\r\n        if (!plugin.name) {\r\n            throw new Error('Plugin does not have a name!');\r\n        }\r\n        if (!plugin.instance) {\r\n            throw new Error(\r\n                `Plugin ${plugin.name} does not have an instance property!`\r\n            );\r\n        }\r\n\r\n        // staticProps properties are applied to wavesurfer instance\r\n        if (plugin.staticProps) {\r\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\r\n                /**\r\n                 * Properties defined in a plugin definition's `staticProps` property are added as\r\n                 * staticProps properties of the WaveSurfer instance\r\n                 */\r\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\r\n            });\r\n        }\r\n\r\n        const Instance = plugin.instance;\r\n\r\n        // turn the plugin instance into an observer\r\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\r\n            util.Observer.prototype\r\n        );\r\n        observerPrototypeKeys.forEach(key => {\r\n            Instance.prototype[key] = util.Observer.prototype[key];\r\n        });\r\n\r\n        /**\r\n         * Instantiated plugin classes are added as a property of the wavesurfer\r\n         * instance\r\n         * @type {Object}\r\n         */\r\n        this[plugin.name] = new Instance(plugin.params || {}, this);\r\n        this.fireEvent('plugin-added', plugin.name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Initialise a plugin\r\n     *\r\n     * @param {string} name A plugin name\r\n     * @emits WaveSurfer#plugin-initialised\r\n     * @example wavesurfer.initPlugin('minimap');\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    initPlugin(name) {\r\n        if (!this[name]) {\r\n            throw new Error(`Plugin ${name} has not been added yet!`);\r\n        }\r\n        if (this.initialisedPluginList[name]) {\r\n            // destroy any already initialised plugins\r\n            this.destroyPlugin(name);\r\n        }\r\n        this[name].init();\r\n        this.initialisedPluginList[name] = true;\r\n        this.fireEvent('plugin-initialised', name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy a plugin\r\n     *\r\n     * @param {string} name A plugin name\r\n     * @emits WaveSurfer#plugin-destroyed\r\n     * @example wavesurfer.destroyPlugin('minimap');\r\n     * @returns {this} The wavesurfer instance\r\n     */\r\n    destroyPlugin(name) {\r\n        if (!this[name]) {\r\n            throw new Error(\r\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\r\n            );\r\n        }\r\n        if (!this.initialisedPluginList[name]) {\r\n            throw new Error(\r\n                `Plugin ${name} is not active and cannot be destroyed!`\r\n            );\r\n        }\r\n        if (typeof this[name].destroy !== 'function') {\r\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\r\n        }\r\n\r\n        this[name].destroy();\r\n        delete this.initialisedPluginList[name];\r\n        this.fireEvent('plugin-destroyed', name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy all initialised plugins. Convenience function to use when\r\n     * wavesurfer is removed\r\n     *\r\n     * @private\r\n     */\r\n    destroyAllPlugins() {\r\n        Object.keys(this.initialisedPluginList).forEach(name =>\r\n            this.destroyPlugin(name)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Create the drawer and draw the waveform\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#drawer-created\r\n     */\r\n    createDrawer() {\r\n        this.drawer = new this.Drawer(this.container, this.params);\r\n        this.drawer.init();\r\n        this.fireEvent('drawer-created', this.drawer);\r\n\r\n        if (this.params.responsive !== false) {\r\n            window.addEventListener('resize', this._onResize, true);\r\n            window.addEventListener('orientationchange', this._onResize, true);\r\n        }\r\n\r\n        this.drawer.on('redraw', () => {\r\n            this.drawBuffer();\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n        });\r\n\r\n        // Click-to-seek\r\n        this.drawer.on('click', (e, progress) => {\r\n            setTimeout(() => this.seekTo(progress), 0);\r\n        });\r\n\r\n        // Relay the scroll event from the drawer\r\n        this.drawer.on('scroll', e => {\r\n            if (this.params.partialRender) {\r\n                this.drawBuffer();\r\n            }\r\n            this.fireEvent('scroll', e);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the backend\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#backend-created\r\n     */\r\n    createBackend() {\r\n        if (this.backend) {\r\n            this.backend.destroy();\r\n        }\r\n\r\n        this.backend = new this.Backend(this.params);\r\n        this.backend.init();\r\n        this.fireEvent('backend-created', this.backend);\r\n\r\n        this.backend.on('finish', () => {\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n            this.fireEvent('finish');\r\n        });\r\n        this.backend.on('play', () => this.fireEvent('play'));\r\n        this.backend.on('pause', () => this.fireEvent('pause'));\r\n\r\n        this.backend.on('audioprocess', time => {\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n            this.fireEvent('audioprocess', time);\r\n        });\r\n\r\n        // only needed for MediaElement and MediaElementWebAudio backend\r\n        if (\r\n            this.params.backend === 'MediaElement' ||\r\n            this.params.backend === 'MediaElementWebAudio'\r\n        ) {\r\n            this.backend.on('seek', () => {\r\n                this.drawer.progress(this.backend.getPlayedPercents());\r\n            });\r\n\r\n            this.backend.on('volume', () => {\r\n                let newVolume = this.getVolume();\r\n                this.fireEvent('volume', newVolume);\r\n\r\n                if (this.backend.isMuted !== this.isMuted) {\r\n                    this.isMuted = this.backend.isMuted;\r\n                    this.fireEvent('mute', this.isMuted);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the peak cache\r\n     *\r\n     * @private\r\n     */\r\n    createPeakCache() {\r\n        if (this.params.partialRender) {\r\n            this.peakCache = new PeakCache();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the duration of the audio clip\r\n     *\r\n     * @example const duration = wavesurfer.getDuration();\r\n     * @return {number} Duration in seconds\r\n     */\r\n    getDuration() {\r\n        return this.backend.getDuration();\r\n    }\r\n\r\n    /**\r\n     * Get the current playback position\r\n     *\r\n     * @example const currentTime = wavesurfer.getCurrentTime();\r\n     * @return {number} Playback position in seconds\r\n     */\r\n    getCurrentTime() {\r\n        return this.backend.getCurrentTime();\r\n    }\r\n\r\n    /**\r\n     * Set the current play time in seconds.\r\n     *\r\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\r\n     * seconds, 60 means 1 minute\r\n     */\r\n    setCurrentTime(seconds) {\r\n        if (seconds >= this.getDuration()) {\r\n            this.seekTo(1);\r\n        } else {\r\n            this.seekTo(seconds / this.getDuration());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts playback from the current position. Optional start and end\r\n     * measured in seconds can be used to set the range of audio to play.\r\n     *\r\n     * @param {?number} start Position to start at\r\n     * @param {?number} end Position to end at\r\n     * @emits WaveSurfer#interaction\r\n     * @return {Promise} Result of the backend play method\r\n     * @example\r\n     * // play from second 1 to 5\r\n     * wavesurfer.play(1, 5);\r\n     */\r\n    play(start, end) {\r\n        this.fireEvent('interaction', () => this.play(start, end));\r\n        return this.backend.play(start, end);\r\n    }\r\n\r\n    /**\r\n     * Set a point in seconds for playback to stop at.\r\n     *\r\n     * @param {number} position Position (in seconds) to stop at\r\n     * @version 3.3.0\r\n     */\r\n    setPlayEnd(position) {\r\n        this.backend.setPlayEnd(position);\r\n    }\r\n\r\n    /**\r\n     * Stops and pauses playback\r\n     *\r\n     * @example wavesurfer.pause();\r\n     * @return {Promise} Result of the backend pause method\r\n     */\r\n    pause() {\r\n        if (!this.backend.isPaused()) {\r\n            return this.backend.pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle playback\r\n     *\r\n     * @example wavesurfer.playPause();\r\n     * @return {Promise} Result of the backend play or pause method\r\n     */\r\n    playPause() {\r\n        return this.backend.isPaused() ? this.play() : this.pause();\r\n    }\r\n\r\n    /**\r\n     * Get the current playback state\r\n     *\r\n     * @example const isPlaying = wavesurfer.isPlaying();\r\n     * @return {boolean} False if paused, true if playing\r\n     */\r\n    isPlaying() {\r\n        return !this.backend.isPaused();\r\n    }\r\n\r\n    /**\r\n     * Skip backward\r\n     *\r\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n     * is used\r\n     * @example wavesurfer.skipBackward();\r\n     */\r\n    skipBackward(seconds) {\r\n        this.skip(-seconds || -this.params.skipLength);\r\n    }\r\n\r\n    /**\r\n     * Skip forward\r\n     *\r\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n     * is used\r\n     * @example wavesurfer.skipForward();\r\n     */\r\n    skipForward(seconds) {\r\n        this.skip(seconds || this.params.skipLength);\r\n    }\r\n\r\n    /**\r\n     * Skip a number of seconds from the current position (use a negative value\r\n     * to go backwards).\r\n     *\r\n     * @param {number} offset Amount to skip back or forwards\r\n     * @example\r\n     * // go back 2 seconds\r\n     * wavesurfer.skip(-2);\r\n     */\r\n    skip(offset) {\r\n        const duration = this.getDuration() || 1;\r\n        let position = this.getCurrentTime() || 0;\r\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\r\n        this.seekAndCenter(position / duration);\r\n    }\r\n\r\n    /**\r\n     * Seeks to a position and centers the view\r\n     *\r\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n     * @example\r\n     * // seek and go to the middle of the audio\r\n     * wavesurfer.seekTo(0.5);\r\n     */\r\n    seekAndCenter(progress) {\r\n        this.seekTo(progress);\r\n        this.drawer.recenter(progress);\r\n    }\r\n\r\n    /**\r\n     * Seeks to a position\r\n     *\r\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n     * @emits WaveSurfer#interaction\r\n     * @emits WaveSurfer#seek\r\n     * @example\r\n     * // seek to the middle of the audio\r\n     * wavesurfer.seekTo(0.5);\r\n     */\r\n    seekTo(progress) {\r\n        // return an error if progress is not a number between 0 and 1\r\n        if (\r\n            typeof progress !== 'number' ||\r\n            !isFinite(progress) ||\r\n            progress < 0 ||\r\n            progress > 1\r\n        ) {\r\n            throw new Error(\r\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\r\n            );\r\n        }\r\n        this.fireEvent('interaction', () => this.seekTo(progress));\r\n\r\n        const paused = this.backend.isPaused();\r\n        // avoid draw wrong position while playing backward seeking\r\n        if (!paused) {\r\n            this.backend.pause();\r\n        }\r\n        // avoid small scrolls while paused seeking\r\n        const oldScrollParent = this.params.scrollParent;\r\n        this.params.scrollParent = false;\r\n        this.backend.seekTo(progress * this.getDuration());\r\n        this.drawer.progress(progress);\r\n\r\n        if (!paused) {\r\n            this.backend.play();\r\n        }\r\n        this.params.scrollParent = oldScrollParent;\r\n        this.fireEvent('seek', progress);\r\n    }\r\n\r\n    /**\r\n     * Stops and goes to the beginning.\r\n     *\r\n     * @example wavesurfer.stop();\r\n     */\r\n    stop() {\r\n        this.pause();\r\n        this.seekTo(0);\r\n        this.drawer.progress(0);\r\n    }\r\n\r\n    /**\r\n     * Sets the ID of the audio device to use for output and returns a Promise.\r\n     *\r\n     * @param {string} deviceId String value representing underlying output\r\n     * device\r\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\r\n     * no errors detected.\r\n     */\r\n    setSinkId(deviceId) {\r\n        return this.backend.setSinkId(deviceId);\r\n    }\r\n\r\n    /**\r\n     * Set the playback volume.\r\n     *\r\n     * @param {number} newVolume A value between 0 and 1, 0 being no\r\n     * volume and 1 being full volume.\r\n     * @emits WaveSurfer#volume\r\n     */\r\n    setVolume(newVolume) {\r\n        this.backend.setVolume(newVolume);\r\n        this.fireEvent('volume', newVolume);\r\n    }\r\n\r\n    /**\r\n     * Get the playback volume.\r\n     *\r\n     * @return {number} A value between 0 and 1, 0 being no\r\n     * volume and 1 being full volume.\r\n     */\r\n    getVolume() {\r\n        return this.backend.getVolume();\r\n    }\r\n\r\n    /**\r\n     * Set the playback rate.\r\n     *\r\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\r\n     * speed, 2 means double speed and so on.\r\n     * @example wavesurfer.setPlaybackRate(2);\r\n     */\r\n    setPlaybackRate(rate) {\r\n        this.backend.setPlaybackRate(rate);\r\n    }\r\n\r\n    /**\r\n     * Get the playback rate.\r\n     *\r\n     * @return {number} The current playback rate.\r\n     */\r\n    getPlaybackRate() {\r\n        return this.backend.getPlaybackRate();\r\n    }\r\n\r\n    /**\r\n     * Toggle the volume on and off. If not currently muted it will save the\r\n     * current volume value and turn the volume off. If currently muted then it\r\n     * will restore the volume to the saved value, and then rest the saved\r\n     * value.\r\n     *\r\n     * @example wavesurfer.toggleMute();\r\n     */\r\n    toggleMute() {\r\n        this.setMute(!this.isMuted);\r\n    }\r\n\r\n    /**\r\n     * Enable or disable muted audio\r\n     *\r\n     * @param {boolean} mute Specify `true` to mute audio.\r\n     * @emits WaveSurfer#volume\r\n     * @emits WaveSurfer#mute\r\n     * @example\r\n     * // unmute\r\n     * wavesurfer.setMute(false);\r\n     * console.log(wavesurfer.getMute()) // logs false\r\n     */\r\n    setMute(mute) {\r\n        // ignore all muting requests if the audio is already in that state\r\n        if (mute === this.isMuted) {\r\n            this.fireEvent('mute', this.isMuted);\r\n            return;\r\n        }\r\n\r\n        if (mute) {\r\n            // If currently not muted then save current volume,\r\n            // turn off the volume and update the mute properties\r\n            this.savedVolume = this.backend.getVolume();\r\n            this.backend.setVolume(0);\r\n            this.isMuted = true;\r\n            this.fireEvent('volume', 0);\r\n        } else {\r\n            // If currently muted then restore to the saved volume\r\n            // and update the mute properties\r\n            this.backend.setVolume(this.savedVolume);\r\n            this.isMuted = false;\r\n            this.fireEvent('volume', this.savedVolume);\r\n        }\r\n        this.fireEvent('mute', this.isMuted);\r\n    }\r\n\r\n    /**\r\n     * Get the current mute status.\r\n     *\r\n     * @example const isMuted = wavesurfer.getMute();\r\n     * @return {boolean} Current mute status\r\n     */\r\n    getMute() {\r\n        return this.isMuted;\r\n    }\r\n\r\n    /**\r\n     * Get the list of current set filters as an array.\r\n     *\r\n     * Filters must be set with setFilters method first\r\n     *\r\n     * @return {array} List of enabled filters\r\n     */\r\n    getFilters() {\r\n        return this.backend.filters || [];\r\n    }\r\n\r\n    /**\r\n     * Toggles `scrollParent` and redraws\r\n     *\r\n     * @example wavesurfer.toggleScroll();\r\n     */\r\n    toggleScroll() {\r\n        this.params.scrollParent = !this.params.scrollParent;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Toggle mouse interaction\r\n     *\r\n     * @example wavesurfer.toggleInteraction();\r\n     */\r\n    toggleInteraction() {\r\n        this.params.interact = !this.params.interact;\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the waveform after the cursor.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getWaveColor() {\r\n        return this.params.waveColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the waveform after the cursor.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setWaveColor('#ddd');\r\n     */\r\n    setWaveColor(color) {\r\n        this.params.waveColor = color;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the waveform behind the cursor.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getProgressColor() {\r\n        return this.params.progressColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the waveform behind the cursor.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setProgressColor('#400');\r\n     */\r\n    setProgressColor(color) {\r\n        this.params.progressColor = color;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the background color of the waveform container.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getBackgroundColor() {\r\n        return this.params.backgroundColor;\r\n    }\r\n\r\n    /**\r\n     * Set the background color of the waveform container.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\r\n     */\r\n    setBackgroundColor(color) {\r\n        this.params.backgroundColor = color;\r\n        util.style(this.container, { background: this.params.backgroundColor });\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the cursor indicating the playhead\r\n     * position.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getCursorColor() {\r\n        return this.params.cursorColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the cursor indicating the playhead\r\n     * position.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setCursorColor('#222');\r\n     */\r\n    setCursorColor(color) {\r\n        this.params.cursorColor = color;\r\n        this.drawer.updateCursor();\r\n    }\r\n\r\n    /**\r\n     * Get the height of the waveform.\r\n     *\r\n     * @return {number} Height measured in pixels.\r\n     */\r\n    getHeight() {\r\n        return this.params.height;\r\n    }\r\n\r\n    /**\r\n     * Set the height of the waveform.\r\n     *\r\n     * @param {number} height Height measured in pixels.\r\n     * @example wavesurfer.setHeight(200);\r\n     */\r\n    setHeight(height) {\r\n        this.params.height = height;\r\n        this.drawer.setHeight(height * this.params.pixelRatio);\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the correct peaks for current wave view-port and render wave\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#redraw\r\n     */\r\n    drawBuffer() {\r\n        const nominalWidth = Math.round(\r\n            this.getDuration() *\r\n                this.params.minPxPerSec *\r\n                this.params.pixelRatio\r\n        );\r\n        const parentWidth = this.drawer.getWidth();\r\n        let width = nominalWidth;\r\n        // always start at 0 after zooming for scrolling : issue redraw left part\r\n        let start = 0;\r\n        let end = Math.max(start + parentWidth, width);\r\n        // Fill container\r\n        if (\r\n            this.params.fillParent &&\r\n            (!this.params.scrollParent || nominalWidth < parentWidth)\r\n        ) {\r\n            width = parentWidth;\r\n            start = 0;\r\n            end = width;\r\n        }\r\n\r\n        let peaks;\r\n        if (this.params.partialRender) {\r\n            const newRanges = this.peakCache.addRangeToPeakCache(\r\n                width,\r\n                start,\r\n                end\r\n            );\r\n            let i;\r\n            for (i = 0; i < newRanges.length; i++) {\r\n                peaks = this.backend.getPeaks(\r\n                    width,\r\n                    newRanges[i][0],\r\n                    newRanges[i][1]\r\n                );\r\n                this.drawer.drawPeaks(\r\n                    peaks,\r\n                    width,\r\n                    newRanges[i][0],\r\n                    newRanges[i][1]\r\n                );\r\n            }\r\n        } else {\r\n            peaks = this.backend.getPeaks(width, start, end);\r\n            this.drawer.drawPeaks(peaks, width, start, end);\r\n        }\r\n        this.fireEvent('redraw', peaks, width);\r\n    }\r\n\r\n    /**\r\n     * Horizontally zooms the waveform in and out. It also changes the parameter\r\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\r\n     * with a falsey parameter will reset the zoom state.\r\n     *\r\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\r\n     * audio, if none is set the waveform returns to unzoomed state\r\n     * @emits WaveSurfer#zoom\r\n     * @example wavesurfer.zoom(20);\r\n     */\r\n    zoom(pxPerSec) {\r\n        if (!pxPerSec) {\r\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\r\n            this.params.scrollParent = false;\r\n        } else {\r\n            this.params.minPxPerSec = pxPerSec;\r\n            this.params.scrollParent = true;\r\n        }\r\n\r\n        this.drawBuffer();\r\n        this.drawer.progress(this.backend.getPlayedPercents());\r\n\r\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\r\n        this.fireEvent('zoom', pxPerSec);\r\n    }\r\n\r\n    /**\r\n     * Decode buffer and load\r\n     *\r\n     * @private\r\n     * @param {ArrayBuffer} arraybuffer Buffer to process\r\n     */\r\n    loadArrayBuffer(arraybuffer) {\r\n        this.decodeArrayBuffer(arraybuffer, data => {\r\n            if (!this.isDestroyed) {\r\n                this.loadDecodedBuffer(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Directly load an externally decoded AudioBuffer\r\n     *\r\n     * @private\r\n     * @param {AudioBuffer} buffer Buffer to process\r\n     * @emits WaveSurfer#ready\r\n     */\r\n    loadDecodedBuffer(buffer) {\r\n        this.backend.load(buffer);\r\n        this.drawBuffer();\r\n        this.isReady = true;\r\n        this.fireEvent('ready');\r\n    }\r\n\r\n    /**\r\n     * Loads audio data from a Blob or File object\r\n     *\r\n     * @param {Blob|File} blob Audio data\r\n     * @example\r\n     */\r\n    loadBlob(blob) {\r\n        // Create file reader\r\n        const reader = new FileReader();\r\n        reader.addEventListener('progress', e => this.onProgress(e));\r\n        reader.addEventListener('load', e =>\r\n            this.loadArrayBuffer(e.target.result)\r\n        );\r\n        reader.addEventListener('error', () =>\r\n            this.fireEvent('error', 'Error reading file')\r\n        );\r\n        reader.readAsArrayBuffer(blob);\r\n        this.empty();\r\n    }\r\n\r\n    /**\r\n     * Loads audio and re-renders the waveform.\r\n     *\r\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\r\n     * audio element with the audio\r\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\r\n     * the audio to render the waveform if this is specified\r\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\r\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\r\n     * @param {?number} duration The duration of the audio. This is used to\r\n     * render the peaks data in the correct size for the audio duration (as\r\n     * befits the current `minPxPerSec` and zoom value) without having to decode\r\n     * the audio.\r\n     * @returns {void}\r\n     * @throws Will throw an error if the `url` argument is empty.\r\n     * @example\r\n     * // uses fetch or media element to load file (depending on backend)\r\n     * wavesurfer.load('http://example.com/demo.wav');\r\n     *\r\n     * // setting preload attribute with media element backend and supplying\r\n     * // peaks\r\n     * wavesurfer.load(\r\n     *   'http://example.com/demo.wav',\r\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\r\n     *   true\r\n     * );\r\n     */\r\n    load(url, peaks, preload, duration) {\r\n        if (!url) {\r\n            throw new Error('url parameter cannot be empty');\r\n        }\r\n        this.empty();\r\n        if (preload) {\r\n            // check whether the preload attribute will be usable and if not log\r\n            // a warning listing the reasons why not and nullify the variable\r\n            const preloadIgnoreReasons = {\r\n                \"Preload is not 'auto', 'none' or 'metadata'\":\r\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\r\n                'Peaks are not provided': !peaks,\r\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\r\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\r\n                        this.params.backend\r\n                    ) === -1,\r\n                'Url is not of type string': typeof url !== 'string'\r\n            };\r\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\r\n                reason => preloadIgnoreReasons[reason]\r\n            );\r\n            if (activeReasons.length) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\r\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\r\n                        activeReasons.join('\\n\\t- ')\r\n                );\r\n                // stop invalid values from being used\r\n                preload = null;\r\n            }\r\n        }\r\n\r\n        switch (this.params.backend) {\r\n            case 'WebAudio':\r\n                return this.loadBuffer(url, peaks, duration);\r\n            case 'MediaElement':\r\n            case 'MediaElementWebAudio':\r\n                return this.loadMediaElement(url, peaks, preload, duration);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads audio using Web Audio buffer backend.\r\n     *\r\n     * @private\r\n     * @param {string} url URL of audio file\r\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\r\n     * @param {?number} duration Optional duration of audio file\r\n     * @returns {void}\r\n     */\r\n    loadBuffer(url, peaks, duration) {\r\n        const load = action => {\r\n            if (action) {\r\n                this.tmpEvents.push(this.once('ready', action));\r\n            }\r\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\r\n        };\r\n\r\n        if (peaks) {\r\n            this.backend.setPeaks(peaks, duration);\r\n            this.drawBuffer();\r\n            this.tmpEvents.push(this.once('interaction', load));\r\n        } else {\r\n            return load();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Either create a media element, or load an existing media element.\r\n     *\r\n     * @private\r\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\r\n     * existing HTML5 Audio/Video Element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\r\n     * dependency\r\n     * @param {?boolean} preload Set to true if the preload attribute of the\r\n     * audio element should be enabled\r\n     * @param {?number} duration Optional duration of audio file\r\n     */\r\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\r\n        let url = urlOrElt;\r\n\r\n        if (typeof urlOrElt === 'string') {\r\n            this.backend.load(url, this.mediaContainer, peaks, preload);\r\n        } else {\r\n            const elt = urlOrElt;\r\n            this.backend.loadElt(elt, peaks);\r\n\r\n            // If peaks are not provided,\r\n            // url = element.src so we can get peaks with web audio\r\n            url = elt.src;\r\n        }\r\n\r\n        this.tmpEvents.push(\r\n            this.backend.once('canplay', () => {\r\n                // ignore when backend was already destroyed\r\n                if (!this.backend.destroyed) {\r\n                    this.drawBuffer();\r\n                    this.isReady = true;\r\n                    this.fireEvent('ready');\r\n                }\r\n            }),\r\n            this.backend.once('error', err => this.fireEvent('error', err))\r\n        );\r\n\r\n        // If no pre-decoded peaks provided or pre-decoded peaks are\r\n        // provided with forceDecode flag, attempt to download the\r\n        // audio file and decode it with Web Audio.\r\n        if (peaks) {\r\n            this.backend.setPeaks(peaks, duration);\r\n        }\r\n\r\n        if (\r\n            (!peaks || this.params.forceDecode) &&\r\n            this.backend.supportsWebAudio()\r\n        ) {\r\n            this.getArrayBuffer(url, arraybuffer => {\r\n                this.decodeArrayBuffer(arraybuffer, buffer => {\r\n                    this.backend.buffer = buffer;\r\n                    this.backend.setPeaks(null);\r\n                    this.drawBuffer();\r\n                    this.fireEvent('waveform-ready');\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decode an array buffer and pass data to a callback\r\n     *\r\n     * @private\r\n     * @param {Object} arraybuffer The array buffer to decode\r\n     * @param {function} callback The function to call on complete\r\n     */\r\n    decodeArrayBuffer(arraybuffer, callback) {\r\n        this.arraybuffer = arraybuffer;\r\n        this.backend.decodeArrayBuffer(\r\n            arraybuffer,\r\n            data => {\r\n                // Only use the decoded data if we haven't been destroyed or\r\n                // another decode started in the meantime\r\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\r\n                    callback(data);\r\n                    this.arraybuffer = null;\r\n                }\r\n            },\r\n            () => this.fireEvent('error', 'Error decoding audiobuffer')\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Load an array buffer using fetch and pass the result to a callback\r\n     *\r\n     * @param {string} url The URL of the file object\r\n     * @param {function} callback The function to call on complete\r\n     * @returns {util.fetchFile} fetch call\r\n     * @private\r\n     */\r\n    getArrayBuffer(url, callback) {\r\n        let options = Object.assign(\r\n            {\r\n                url: url,\r\n                responseType: 'arraybuffer'\r\n            },\r\n            this.params.xhr\r\n        );\r\n        const request = util.fetchFile(options);\r\n\r\n        this.currentRequest = request;\r\n\r\n        this.tmpEvents.push(\r\n            request.on('progress', e => {\r\n                this.onProgress(e);\r\n            }),\r\n            request.on('success', data => {\r\n                callback(data);\r\n                this.currentRequest = null;\r\n            }),\r\n            request.on('error', e => {\r\n                this.fireEvent('error', e);\r\n                this.currentRequest = null;\r\n            })\r\n        );\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * Called while the audio file is loading\r\n     *\r\n     * @private\r\n     * @param {Event} e Progress event\r\n     * @emits WaveSurfer#loading\r\n     */\r\n    onProgress(e) {\r\n        let percentComplete;\r\n        if (e.lengthComputable) {\r\n            percentComplete = e.loaded / e.total;\r\n        } else {\r\n            // Approximate progress with an asymptotic\r\n            // function, and assume downloads in the 1-3 MB range.\r\n            percentComplete = e.loaded / (e.loaded + 1000000);\r\n        }\r\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\r\n    }\r\n\r\n    /**\r\n     * Exports PCM data into a JSON array and opens in a new window.\r\n     *\r\n     * @param {number} length=1024 The scale in which to export the peaks\r\n     * @param {number} accuracy=10000\r\n     * @param {?boolean} noWindow Set to true to disable opening a new\r\n     * window with the JSON\r\n     * @param {number} start Start index\r\n     * @param {number} end End index\r\n     * @return {Promise} Promise that resolves with array of peaks\r\n     */\r\n    exportPCM(length, accuracy, noWindow, start, end) {\r\n        length = length || 1024;\r\n        start = start || 0;\r\n        accuracy = accuracy || 10000;\r\n        noWindow = noWindow || false;\r\n        const peaks = this.backend.getPeaks(length, start, end);\r\n        const arr = [].map.call(\r\n            peaks,\r\n            val => Math.round(val * accuracy) / accuracy\r\n        );\r\n        return new Promise((resolve, reject) => {\r\n            const json = JSON.stringify(arr);\r\n\r\n            if (!noWindow) {\r\n                window.open(\r\n                    'data:application/json;charset=utf-8,' +\r\n                        encodeURIComponent(json)\r\n                );\r\n            }\r\n            resolve(json);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save waveform image as data URI.\r\n     *\r\n     * The default format is `'image/png'`. Other supported types are\r\n     * `'image/jpeg'` and `'image/webp'`.\r\n     *\r\n     * @param {string} format='image/png' A string indicating the image format.\r\n     * The default format type is `'image/png'`.\r\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\r\n     * quality to use for image formats that use lossy compression such as\r\n     * `'image/jpeg'`` and `'image/webp'`.\r\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\r\n     * or 'blob'.\r\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\r\n     * a single data URL or an array of data URLs, one for each canvas. When using\r\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\r\n     * instances, one for each canvas.\r\n     */\r\n    exportImage(format, quality, type) {\r\n        if (!format) {\r\n            format = 'image/png';\r\n        }\r\n        if (!quality) {\r\n            quality = 1;\r\n        }\r\n        if (!type) {\r\n            type = 'dataURL';\r\n        }\r\n\r\n        return this.drawer.getImage(format, quality, type);\r\n    }\r\n\r\n    /**\r\n     * Cancel any fetch request currently in progress\r\n     */\r\n    cancelAjax() {\r\n        if (this.currentRequest && this.currentRequest.controller) {\r\n            this.currentRequest.controller.abort();\r\n            this.currentRequest = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    clearTmpEvents() {\r\n        this.tmpEvents.forEach(e => e.un());\r\n    }\r\n\r\n    /**\r\n     * Display empty waveform.\r\n     */\r\n    empty() {\r\n        if (!this.backend.isPaused()) {\r\n            this.stop();\r\n            this.backend.disconnectSource();\r\n        }\r\n        this.isReady = false;\r\n        this.cancelAjax();\r\n        this.clearTmpEvents();\r\n\r\n        // empty drawer\r\n        this.drawer.progress(0);\r\n        this.drawer.setWidth(0);\r\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\r\n    }\r\n\r\n    /**\r\n     * Remove events, elements and disconnect WebAudio nodes.\r\n     *\r\n     * @emits WaveSurfer#destroy\r\n     */\r\n    destroy() {\r\n        this.destroyAllPlugins();\r\n        this.fireEvent('destroy');\r\n        this.cancelAjax();\r\n        this.clearTmpEvents();\r\n        this.unAll();\r\n        if (this.params.responsive !== false) {\r\n            window.removeEventListener('resize', this._onResize, true);\r\n            window.removeEventListener(\r\n                'orientationchange',\r\n                this._onResize,\r\n                true\r\n            );\r\n        }\r\n        if (this.backend) {\r\n            this.backend.destroy();\r\n        }\r\n        if (this.drawer) {\r\n            this.drawer.destroy();\r\n        }\r\n        this.isDestroyed = true;\r\n        this.isReady = false;\r\n        this.arraybuffer = null;\r\n    }\r\n}\r\n","import * as util from './util';\r\n\r\n// using constants to prevent someone writing the string wrong\r\nconst PLAYING = 'playing';\r\nconst PAUSED = 'paused';\r\nconst FINISHED = 'finished';\r\n\r\n/**\r\n * WebAudio backend\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class WebAudio extends util.Observer {\r\n    /** scriptBufferSize: size of the processing buffer */\r\n    static scriptBufferSize = 256;\r\n    /** audioContext: allows to process audio with WebAudio API */\r\n    audioContext = null;\r\n    /** @private */\r\n    offlineAudioContext = null;\r\n    /** @private */\r\n    stateBehaviors = {\r\n        [PLAYING]: {\r\n            init() {\r\n                this.addOnAudioProcess();\r\n            },\r\n            getPlayedPercents() {\r\n                const duration = this.getDuration();\r\n                return this.getCurrentTime() / duration || 0;\r\n            },\r\n            getCurrentTime() {\r\n                return this.startPosition + this.getPlayedTime();\r\n            }\r\n        },\r\n        [PAUSED]: {\r\n            init() {\r\n                this.removeOnAudioProcess();\r\n            },\r\n            getPlayedPercents() {\r\n                const duration = this.getDuration();\r\n                return this.getCurrentTime() / duration || 0;\r\n            },\r\n            getCurrentTime() {\r\n                return this.startPosition;\r\n            }\r\n        },\r\n        [FINISHED]: {\r\n            init() {\r\n                this.removeOnAudioProcess();\r\n                this.fireEvent('finish');\r\n            },\r\n            getPlayedPercents() {\r\n                return 1;\r\n            },\r\n            getCurrentTime() {\r\n                return this.getDuration();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Does the browser support this backend\r\n     *\r\n     * @return {boolean} Whether or not this browser supports this backend\r\n     */\r\n    supportsWebAudio() {\r\n        return !!(window.AudioContext || window.webkitAudioContext);\r\n    }\r\n\r\n    /**\r\n     * Get the audio context used by this backend or create one\r\n     *\r\n     * @return {AudioContext} Existing audio context, or creates a new one\r\n     */\r\n    getAudioContext() {\r\n        if (!window.WaveSurferAudioContext) {\r\n            window.WaveSurferAudioContext = new (window.AudioContext ||\r\n                window.webkitAudioContext)();\r\n        }\r\n        return window.WaveSurferAudioContext;\r\n    }\r\n\r\n    /**\r\n     * Get the offline audio context used by this backend or create one\r\n     *\r\n     * @param {number} sampleRate The sample rate to use\r\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\r\n     * a new one\r\n     */\r\n    getOfflineAudioContext(sampleRate) {\r\n        if (!window.WaveSurferOfflineAudioContext) {\r\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\r\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\r\n        }\r\n        return window.WaveSurferOfflineAudioContext;\r\n    }\r\n\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super();\r\n        /** @private */\r\n        this.params = params;\r\n        /** ac: Audio Context instance */\r\n        this.ac =\r\n            params.audioContext ||\r\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\r\n        /**@private */\r\n        this.lastPlay = this.ac.currentTime;\r\n        /** @private */\r\n        this.startPosition = 0;\r\n        /** @private */\r\n        this.scheduledPause = null;\r\n        /** @private */\r\n        this.states = {\r\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\r\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\r\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\r\n        };\r\n        /** @private */\r\n        this.buffer = null;\r\n        /** @private */\r\n        this.filters = [];\r\n        /** gainNode: allows to control audio volume */\r\n        this.gainNode = null;\r\n        /** @private */\r\n        this.mergedPeaks = null;\r\n        /** @private */\r\n        this.offlineAc = null;\r\n        /** @private */\r\n        this.peaks = null;\r\n        /** @private */\r\n        this.playbackRate = 1;\r\n        /** analyser: provides audio analysis information */\r\n        this.analyser = null;\r\n        /** scriptNode: allows processing audio */\r\n        this.scriptNode = null;\r\n        /** @private */\r\n        this.source = null;\r\n        /** @private */\r\n        this.splitPeaks = [];\r\n        /** @private */\r\n        this.state = null;\r\n        /** @private */\r\n        this.explicitDuration = params.duration;\r\n        /**\r\n         * Boolean indicating if the backend was destroyed.\r\n         */\r\n        this.destroyed = false;\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.createVolumeNode();\r\n        this.createScriptNode();\r\n        this.createAnalyserNode();\r\n\r\n        this.setState(PAUSED);\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.setLength(0);\r\n    }\r\n\r\n    /** @private */\r\n    disconnectFilters() {\r\n        if (this.filters) {\r\n            this.filters.forEach(filter => {\r\n                filter && filter.disconnect();\r\n            });\r\n            this.filters = null;\r\n            // Reconnect direct path\r\n            this.analyser.connect(this.gainNode);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param {string} state The new state\r\n     */\r\n    setState(state) {\r\n        if (this.state !== this.states[state]) {\r\n            this.state = this.states[state];\r\n            this.state.init.call(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unpacked `setFilters()`\r\n     *\r\n     * @param {...AudioNode} filters One or more filters to set\r\n     */\r\n    setFilter(...filters) {\r\n        this.setFilters(filters);\r\n    }\r\n\r\n    /**\r\n     * Insert custom Web Audio nodes into the graph\r\n     *\r\n     * @param {AudioNode[]} filters Packed filters array\r\n     * @example\r\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\r\n     * wavesurfer.backend.setFilter(lowpass);\r\n     */\r\n    setFilters(filters) {\r\n        // Remove existing filters\r\n        this.disconnectFilters();\r\n\r\n        // Insert filters if filter array not empty\r\n        if (filters && filters.length) {\r\n            this.filters = filters;\r\n\r\n            // Disconnect direct path before inserting filters\r\n            this.analyser.disconnect();\r\n\r\n            // Connect each filter in turn\r\n            filters\r\n                .reduce((prev, curr) => {\r\n                    prev.connect(curr);\r\n                    return curr;\r\n                }, this.analyser)\r\n                .connect(this.gainNode);\r\n        }\r\n    }\r\n    /** Create ScriptProcessorNode to process audio */\r\n    createScriptNode() {\r\n        if (this.params.audioScriptProcessor) {\r\n            this.scriptNode = this.params.audioScriptProcessor;\r\n        } else {\r\n            if (this.ac.createScriptProcessor) {\r\n                this.scriptNode = this.ac.createScriptProcessor(\r\n                    WebAudio.scriptBufferSize\r\n                );\r\n            } else {\r\n                this.scriptNode = this.ac.createJavaScriptNode(\r\n                    WebAudio.scriptBufferSize\r\n                );\r\n            }\r\n        }\r\n        this.scriptNode.connect(this.ac.destination);\r\n    }\r\n\r\n    /** @private */\r\n    addOnAudioProcess() {\r\n        this.scriptNode.onaudioprocess = () => {\r\n            const time = this.getCurrentTime();\r\n\r\n            if (time >= this.getDuration()) {\r\n                this.setState(FINISHED);\r\n                this.fireEvent('pause');\r\n            } else if (time >= this.scheduledPause) {\r\n                this.pause();\r\n            } else if (this.state === this.states[PLAYING]) {\r\n                this.fireEvent('audioprocess', time);\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @private */\r\n    removeOnAudioProcess() {\r\n        this.scriptNode.onaudioprocess = () => {};\r\n    }\r\n    /** Create analyser node to perform audio analysis */\r\n    createAnalyserNode() {\r\n        this.analyser = this.ac.createAnalyser();\r\n        this.analyser.connect(this.gainNode);\r\n    }\r\n\r\n    /**\r\n     * Create the gain node needed to control the playback volume.\r\n     *\r\n     */\r\n    createVolumeNode() {\r\n        // Create gain node using the AudioContext\r\n        if (this.ac.createGain) {\r\n            this.gainNode = this.ac.createGain();\r\n        } else {\r\n            this.gainNode = this.ac.createGainNode();\r\n        }\r\n        // Add the gain node to the graph\r\n        this.gainNode.connect(this.ac.destination);\r\n    }\r\n\r\n    /**\r\n     * Set the sink id for the media player\r\n     *\r\n     * @param {string} deviceId String value representing audio device id.\r\n     * @returns {Promise} A Promise that resolves to `undefined` when there\r\n     * are no errors.\r\n     */\r\n    setSinkId(deviceId) {\r\n        if (deviceId) {\r\n            /**\r\n             * The webaudio API doesn't currently support setting the device\r\n             * output. Here we create an HTMLAudioElement, connect the\r\n             * webaudio stream to that element and setSinkId there.\r\n             */\r\n            let audio = new window.Audio();\r\n            if (!audio.setSinkId) {\r\n                return Promise.reject(\r\n                    new Error('setSinkId is not supported in your browser')\r\n                );\r\n            }\r\n            audio.autoplay = true;\r\n            var dest = this.ac.createMediaStreamDestination();\r\n            this.gainNode.disconnect();\r\n            this.gainNode.connect(dest);\r\n            audio.srcObject = dest.stream;\r\n\r\n            return audio.setSinkId(deviceId);\r\n        } else {\r\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the audio volume\r\n     *\r\n     * @param {number} value A floating point value between 0 and 1.\r\n     */\r\n    setVolume(value) {\r\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\r\n    }\r\n\r\n    /**\r\n     * Get the current volume\r\n     *\r\n     * @return {number} value A floating point value between 0 and 1.\r\n     */\r\n    getVolume() {\r\n        return this.gainNode.gain.value;\r\n    }\r\n\r\n    /**\r\n     * Decode an array buffer and pass data to a callback\r\n     *\r\n     * @private\r\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\r\n     * @param {function} callback The function to call on complete.\r\n     * @param {function} errback The function to call on error.\r\n     */\r\n    decodeArrayBuffer(arraybuffer, callback, errback) {\r\n        if (!this.offlineAc) {\r\n            this.offlineAc = this.getOfflineAudioContext(\r\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\r\n            );\r\n        }\r\n        this.offlineAc.decodeAudioData(\r\n            arraybuffer,\r\n            data => callback(data),\r\n            errback\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set pre-decoded peaks\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\r\n     * @param {?number} duration Explicit duration\r\n     */\r\n    setPeaks(peaks, duration) {\r\n        if (duration != null) {\r\n            this.explicitDuration = duration;\r\n        }\r\n        this.peaks = peaks;\r\n    }\r\n\r\n    /**\r\n     * Set the rendered length (different from the length of the audio)\r\n     *\r\n     * @param {number} length The rendered length\r\n     */\r\n    setLength(length) {\r\n        // No resize, we can preserve the cached peaks.\r\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\r\n            return;\r\n        }\r\n\r\n        this.splitPeaks = [];\r\n        this.mergedPeaks = [];\r\n        // Set the last element of the sparse array so the peak arrays are\r\n        // appropriately sized for other calculations.\r\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\r\n        let c;\r\n        for (c = 0; c < channels; c++) {\r\n            this.splitPeaks[c] = [];\r\n            this.splitPeaks[c][2 * (length - 1)] = 0;\r\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\r\n        }\r\n        this.mergedPeaks[2 * (length - 1)] = 0;\r\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\r\n    }\r\n\r\n    /**\r\n     * Compute the max and min value of the waveform when broken into <length> subranges.\r\n     *\r\n     * @param {number} length How many subranges to break the waveform into.\r\n     * @param {number} first First sample in the required range.\r\n     * @param {number} last Last sample in the required range.\r\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\r\n     * peaks consisting of (max, min) values for each subrange.\r\n     */\r\n    getPeaks(length, first, last) {\r\n        if (this.peaks) {\r\n            return this.peaks;\r\n        }\r\n        if (!this.buffer) {\r\n            return [];\r\n        }\r\n\r\n        first = first || 0;\r\n        last = last || length - 1;\r\n\r\n        this.setLength(length);\r\n\r\n        if (!this.buffer) {\r\n            return this.params.splitChannels\r\n                ? this.splitPeaks\r\n                : this.mergedPeaks;\r\n        }\r\n\r\n        /**\r\n         * The following snippet fixes a buffering data issue on the Safari\r\n         * browser which returned undefined It creates the missing buffer based\r\n         * on 1 channel, 4096 samples and the sampleRate from the current\r\n         * webaudio context 4096 samples seemed to be the best fit for rendering\r\n         * will review this code once a stable version of Safari TP is out\r\n         */\r\n        if (!this.buffer.length) {\r\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\r\n            this.buffer = newBuffer.buffer;\r\n        }\r\n\r\n        const sampleSize = this.buffer.length / length;\r\n        const sampleStep = ~~(sampleSize / 10) || 1;\r\n        const channels = this.buffer.numberOfChannels;\r\n        let c;\r\n\r\n        for (c = 0; c < channels; c++) {\r\n            const peaks = this.splitPeaks[c];\r\n            const chan = this.buffer.getChannelData(c);\r\n            let i;\r\n\r\n            for (i = first; i <= last; i++) {\r\n                const start = ~~(i * sampleSize);\r\n                const end = ~~(start + sampleSize);\r\n                let min = 0;\r\n                let max = 0;\r\n                let j;\r\n\r\n                for (j = start; j < end; j += sampleStep) {\r\n                    const value = chan[j];\r\n\r\n                    if (value > max) {\r\n                        max = value;\r\n                    }\r\n\r\n                    if (value < min) {\r\n                        min = value;\r\n                    }\r\n                }\r\n\r\n                peaks[2 * i] = max;\r\n                peaks[2 * i + 1] = min;\r\n\r\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\r\n                    this.mergedPeaks[2 * i] = max;\r\n                }\r\n\r\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\r\n                    this.mergedPeaks[2 * i + 1] = min;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\r\n    }\r\n\r\n    /**\r\n     * Get the position from 0 to 1\r\n     *\r\n     * @return {number} Position\r\n     */\r\n    getPlayedPercents() {\r\n        return this.state.getPlayedPercents.call(this);\r\n    }\r\n\r\n    /** @private */\r\n    disconnectSource() {\r\n        if (this.source) {\r\n            this.source.disconnect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     */\r\n    destroy() {\r\n        if (!this.isPaused()) {\r\n            this.pause();\r\n        }\r\n        this.unAll();\r\n        this.buffer = null;\r\n        this.destroyed = true;\r\n        this.disconnectFilters();\r\n        this.disconnectSource();\r\n        this.gainNode.disconnect();\r\n        this.scriptNode.disconnect();\r\n        this.analyser.disconnect();\r\n\r\n        // close the audioContext if closeAudioContext option is set to true\r\n        if (this.params.closeAudioContext) {\r\n            // check if browser supports AudioContext.close()\r\n            if (\r\n                typeof this.ac.close === 'function' &&\r\n                this.ac.state != 'closed'\r\n            ) {\r\n                this.ac.close();\r\n            }\r\n            // clear the reference to the audiocontext\r\n            this.ac = null;\r\n            // clear the actual audiocontext, either passed as param or the\r\n            // global singleton\r\n            if (!this.params.audioContext) {\r\n                window.WaveSurferAudioContext = null;\r\n            } else {\r\n                this.params.audioContext = null;\r\n            }\r\n            // clear the offlineAudioContext\r\n            window.WaveSurferOfflineAudioContext = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loaded a decoded audio buffer\r\n     *\r\n     * @param {Object} buffer Decoded audio buffer to load\r\n     */\r\n    load(buffer) {\r\n        this.startPosition = 0;\r\n        this.lastPlay = this.ac.currentTime;\r\n        this.buffer = buffer;\r\n        this.createSource();\r\n    }\r\n\r\n    /** @private */\r\n    createSource() {\r\n        this.disconnectSource();\r\n        this.source = this.ac.createBufferSource();\r\n\r\n        // adjust for old browsers\r\n        this.source.start = this.source.start || this.source.noteGrainOn;\r\n        this.source.stop = this.source.stop || this.source.noteOff;\r\n\r\n        this.source.playbackRate.setValueAtTime(\r\n            this.playbackRate,\r\n            this.ac.currentTime\r\n        );\r\n        this.source.buffer = this.buffer;\r\n        this.source.connect(this.analyser);\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n     *\r\n     * @return {boolean} Whether or not this backend is currently paused\r\n     */\r\n    isPaused() {\r\n        return this.state !== this.states[PLAYING];\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.getDuration()`\r\n     *\r\n     * @return {number} Duration of loaded buffer\r\n     */\r\n    getDuration() {\r\n        if (this.explicitDuration) {\r\n            return this.explicitDuration;\r\n        }\r\n        if (!this.buffer) {\r\n            return 0;\r\n        }\r\n        return this.buffer.duration;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.seekTo()`\r\n     *\r\n     * @param {number} start Position to start at in seconds\r\n     * @param {number} end Position to end at in seconds\r\n     * @return {{start: number, end: number}} Object containing start and end\r\n     * positions\r\n     */\r\n    seekTo(start, end) {\r\n        if (!this.buffer) {\r\n            return;\r\n        }\r\n\r\n        this.scheduledPause = null;\r\n\r\n        if (start == null) {\r\n            start = this.getCurrentTime();\r\n            if (start >= this.getDuration()) {\r\n                start = 0;\r\n            }\r\n        }\r\n        if (end == null) {\r\n            end = this.getDuration();\r\n        }\r\n\r\n        this.startPosition = start;\r\n        this.lastPlay = this.ac.currentTime;\r\n\r\n        if (this.state === this.states[FINISHED]) {\r\n            this.setState(PAUSED);\r\n        }\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the playback position in seconds\r\n     *\r\n     * @return {number} The playback position in seconds\r\n     */\r\n    getPlayedTime() {\r\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Plays the loaded audio region.\r\n     *\r\n     * @param {number} start Start offset in seconds, relative to the beginning\r\n     * of a clip.\r\n     * @param {number} end When to stop relative to the beginning of a clip.\r\n     */\r\n    play(start, end) {\r\n        if (!this.buffer) {\r\n            return;\r\n        }\r\n\r\n        // need to re-create source on each playback\r\n        this.createSource();\r\n\r\n        const adjustedTime = this.seekTo(start, end);\r\n\r\n        start = adjustedTime.start;\r\n        end = adjustedTime.end;\r\n\r\n        this.scheduledPause = end;\r\n\r\n        this.source.start(0, start);\r\n\r\n        if (this.ac.state == 'suspended') {\r\n            this.ac.resume && this.ac.resume();\r\n        }\r\n\r\n        this.setState(PLAYING);\r\n\r\n        this.fireEvent('play');\r\n    }\r\n\r\n    /**\r\n     * Pauses the loaded audio.\r\n     */\r\n    pause() {\r\n        this.scheduledPause = null;\r\n\r\n        this.startPosition += this.getPlayedTime();\r\n        this.source && this.source.stop(0);\r\n\r\n        this.setState(PAUSED);\r\n\r\n        this.fireEvent('pause');\r\n    }\r\n\r\n    /**\r\n     * Returns the current time in seconds relative to the audio-clip's\r\n     * duration.\r\n     *\r\n     * @return {number} The current time in seconds\r\n     */\r\n    getCurrentTime() {\r\n        return this.state.getCurrentTime.call(this);\r\n    }\r\n\r\n    /**\r\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\r\n     *\r\n     * @return {number} The current playback rate\r\n     */\r\n    getPlaybackRate() {\r\n        return this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Set the audio source playback rate.\r\n     *\r\n     * @param {number} value The playback rate to use\r\n     */\r\n    setPlaybackRate(value) {\r\n        value = value || 1;\r\n        if (this.isPaused()) {\r\n            this.playbackRate = value;\r\n        } else {\r\n            this.pause();\r\n            this.playbackRate = value;\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set a point in seconds for playback to stop at.\r\n     *\r\n     * @param {number} end Position to end at\r\n     * @version 3.3.0\r\n     */\r\n    setPlayEnd(end) {\r\n        this.scheduledPause = end;\r\n    }\r\n}\r\n"],"sourceRoot":""}